{"version":3,"file":"js/807.3fee3158.js","mappings":"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","sources":["webpack://who_u_web/../../../src/components/VGrid/VCol.ts","webpack://who_u_web/./src/views/MessageScreen.vue","webpack://who_u_web/../../../src/components/VResponsive/VResponsive.ts","webpack://who_u_web/../../../src/components/VResponsive/index.ts","webpack://who_u_web/../../../src/components/VImg/VImg.ts","webpack://who_u_web/../../../src/components/VTextarea/VTextarea.ts","webpack://who_u_web/./src/components/MessageCard.vue","webpack://who_u_web/./node_modules/@supabase/functions-js/dist/module/helper.js","webpack://who_u_web/./node_modules/@supabase/functions-js/dist/module/types.js","webpack://who_u_web/./node_modules/@supabase/functions-js/dist/module/FunctionsClient.js","webpack://who_u_web/./node_modules/@supabase/postgrest-js/dist/module/PostgrestBuilder.js","webpack://who_u_web/./node_modules/@supabase/postgrest-js/dist/module/PostgrestTransformBuilder.js","webpack://who_u_web/./node_modules/@supabase/postgrest-js/dist/module/PostgrestFilterBuilder.js","webpack://who_u_web/./node_modules/@supabase/postgrest-js/dist/module/PostgrestQueryBuilder.js","webpack://who_u_web/./node_modules/@supabase/postgrest-js/dist/module/version.js","webpack://who_u_web/./node_modules/@supabase/postgrest-js/dist/module/constants.js","webpack://who_u_web/./node_modules/@supabase/postgrest-js/dist/module/PostgrestClient.js","webpack://who_u_web/./node_modules/@supabase/realtime-js/dist/module/lib/version.js","webpack://who_u_web/./node_modules/@supabase/realtime-js/dist/module/lib/constants.js","webpack://who_u_web/./node_modules/@supabase/realtime-js/dist/module/RealtimePresence.js","webpack://who_u_web/./node_modules/@supabase/realtime-js/dist/module/lib/transformers.js","webpack://who_u_web/./node_modules/@supabase/realtime-js/dist/module/lib/timer.js","webpack://who_u_web/./node_modules/@supabase/realtime-js/dist/module/lib/serializer.js","webpack://who_u_web/./node_modules/@supabase/realtime-js/dist/module/lib/push.js","webpack://who_u_web/./node_modules/@supabase/realtime-js/dist/module/RealtimeChannel.js","webpack://who_u_web/./node_modules/@supabase/realtime-js/dist/module/RealtimeClient.js","webpack://who_u_web/./node_modules/@supabase/storage-js/dist/module/lib/errors.js","webpack://who_u_web/./node_modules/@supabase/storage-js/dist/module/lib/helpers.js","webpack://who_u_web/./node_modules/@supabase/storage-js/dist/module/lib/fetch.js","webpack://who_u_web/./node_modules/@supabase/storage-js/dist/module/packages/StorageFileApi.js","webpack://who_u_web/./node_modules/@supabase/storage-js/dist/module/lib/version.js","webpack://who_u_web/./node_modules/@supabase/storage-js/dist/module/lib/constants.js","webpack://who_u_web/./node_modules/@supabase/storage-js/dist/module/packages/StorageBucketApi.js","webpack://who_u_web/./node_modules/@supabase/storage-js/dist/module/StorageClient.js","webpack://who_u_web/./node_modules/@supabase/supabase-js/dist/module/lib/version.js","webpack://who_u_web/./node_modules/@supabase/supabase-js/dist/module/lib/constants.js","webpack://who_u_web/./node_modules/@supabase/supabase-js/dist/module/lib/fetch.js","webpack://who_u_web/./node_modules/@supabase/supabase-js/dist/module/lib/helpers.js","webpack://who_u_web/./node_modules/@supabase/gotrue-js/dist/module/lib/helpers.js","webpack://who_u_web/./node_modules/@supabase/gotrue-js/dist/module/lib/errors.js","webpack://who_u_web/./node_modules/@supabase/gotrue-js/dist/module/lib/fetch.js","webpack://who_u_web/./node_modules/@supabase/gotrue-js/dist/module/GoTrueAdminApi.js","webpack://who_u_web/./node_modules/@supabase/gotrue-js/dist/module/lib/version.js","webpack://who_u_web/./node_modules/@supabase/gotrue-js/dist/module/lib/constants.js","webpack://who_u_web/./node_modules/@supabase/gotrue-js/dist/module/lib/local-storage.js","webpack://who_u_web/./node_modules/@supabase/gotrue-js/dist/module/lib/polyfills.js","webpack://who_u_web/./node_modules/@supabase/gotrue-js/dist/module/GoTrueClient.js","webpack://who_u_web/./node_modules/@supabase/supabase-js/dist/module/lib/SupabaseAuthClient.js","webpack://who_u_web/./node_modules/@supabase/supabase-js/dist/module/SupabaseClient.js","webpack://who_u_web/./node_modules/@supabase/supabase-js/dist/module/index.js","webpack://who_u_web/./src/supabase.js","webpack://who_u_web/MessageCard.vue","webpack://who_u_web/./src/components/MessageCard.vue?2ae1","webpack://who_u_web/./src/components/MessageCard.vue?1cf8","webpack://who_u_web/src/views/MessageScreen.vue","webpack://who_u_web/./src/views/MessageScreen.vue?2f34","webpack://who_u_web/./src/views/MessageScreen.vue?52cf","webpack://who_u_web/./node_modules/cross-fetch/dist/browser-ponyfill.js","webpack://who_u_web/./node_modules/es5-ext/global.js","webpack://who_u_web/./node_modules/websocket/lib/browser.js","webpack://who_u_web/./node_modules/websocket/lib/version.js"],"sourcesContent":["import './VGrid.sass'\n\nimport Vue, { VNode, PropOptions } from 'vue'\nimport mergeData from '../../util/mergeData'\nimport { upperFirst } from '../../util/helpers'\n\n// no xs\nconst breakpoints = ['sm', 'md', 'lg', 'xl']\n\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['offset' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props['order' + upperFirst(val)] = {\n      type: [String, Number],\n      default: null,\n    }\n    return props\n  }, {} as Dictionary<PropOptions>)\n})()\n\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps),\n}\n\nfunction breakpointClass (type: keyof typeof propMap, prop: string, val: boolean | string | number) {\n  let className = type\n  if (val == null || val === false) {\n    return undefined\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '')\n    className += `-${breakpoint}`\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .col-md\n    return className.toLowerCase()\n  }\n  // .order-md-6\n  className += `-${val}`\n  return className.toLowerCase()\n}\n\nconst cache = new Map<string, any[]>()\n\nexport default Vue.extend({\n  name: 'v-col',\n  functional: true,\n  props: {\n    cols: {\n      type: [Boolean, String, Number],\n      default: false,\n    },\n    ...breakpointProps,\n    offset: {\n      type: [String, Number],\n      default: null,\n    },\n    ...offsetProps,\n    order: {\n      type: [String, Number],\n      default: null,\n    },\n    ...orderProps,\n    alignSelf: {\n      type: String,\n      default: null,\n      validator: (str: any) => ['auto', 'start', 'end', 'center', 'baseline', 'stretch'].includes(str),\n    },\n    tag: {\n      type: String,\n      default: 'div',\n    },\n  },\n  render (h, { props, data, children, parent }): VNode {\n    // Super-fast memoization based on props, 5x faster than JSON.stringify\n    let cacheKey = ''\n    for (const prop in props) {\n      cacheKey += String((props as any)[prop])\n    }\n    let classList = cache.get(cacheKey)\n\n    if (!classList) {\n      classList = []\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type: keyof typeof propMap\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value: string | number | boolean = (props as any)[prop]\n          const className = breakpointClass(type, prop, value)\n          if (className) classList!.push(className)\n        })\n      }\n\n      const hasColClasses = classList.some(className => className.startsWith('col-'))\n\n      classList.push({\n        // Default to .col if no other col-{bp}-* classes generated nor `cols` specified.\n        col: !hasColClasses || !props.cols,\n        [`col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf,\n      })\n\n      cache.set(cacheKey, classList)\n    }\n\n    return h(props.tag, mergeData(data, { class: classList }), children)\n  },\n})\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"action\"},[_c('v-row',{attrs:{\"align\":\"center\",\"justify\":\"center\"}},[_c('v-col',[_c('v-container',[_c('MessageCard')],1)],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import './VResponsive.sass'\n\n// Mixins\nimport Measurable, { NumberOrNumberString } from '../../mixins/measurable'\n\n// Types\nimport { VNode } from 'vue'\n\n// Utils\nimport mixins from '../../util/mixins'\nimport { getSlot } from '../../util/helpers'\n\n/* @vue/component */\nexport default mixins(Measurable).extend({\n  name: 'v-responsive',\n\n  props: {\n    aspectRatio: [String, Number] as NumberOrNumberString,\n    contentClass: String,\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.aspectRatio)\n    },\n    aspectStyle (): object | undefined {\n      return this.computedAspectRatio\n        ? { paddingBottom: (1 / this.computedAspectRatio) * 100 + '%' }\n        : undefined\n    },\n    __cachedSizer (): VNode | [] {\n      if (!this.aspectStyle) return []\n\n      return this.$createElement('div', {\n        style: this.aspectStyle,\n        staticClass: 'v-responsive__sizer',\n      })\n    },\n  },\n\n  methods: {\n    genContent (): VNode {\n      return this.$createElement('div', {\n        staticClass: 'v-responsive__content',\n        class: this.contentClass,\n      }, getSlot(this))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-responsive',\n      style: this.measurableStyles,\n      on: this.$listeners,\n    }, [\n      this.__cachedSizer,\n      this.genContent(),\n    ])\n  },\n})\n","import VResponsive from './VResponsive'\n\nexport { VResponsive }\nexport default VResponsive\n","// Styles\nimport './VImg.sass'\n\n// Directives\nimport intersect from '../../directives/intersect'\n\n// Types\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n// Components\nimport VResponsive from '../VResponsive'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\nimport mergeData from '../../util/mergeData'\nimport { consoleWarn } from '../../util/console'\nimport { getSlot } from '../../util/helpers'\n\n// not intended for public use, this is passed in by vuetify-loader\nexport interface srcObject {\n  src: string\n  srcset?: string\n  lazySrc: string\n  aspect: number\n}\n\nconst hasIntersect = typeof window !== 'undefined' && 'IntersectionObserver' in window\n\n/* @vue/component */\nexport default mixins(\n  VResponsive,\n  Themeable,\n).extend({\n  name: 'v-img',\n\n  directives: { intersect },\n\n  props: {\n    alt: String,\n    contain: Boolean,\n    eager: Boolean,\n    gradient: String,\n    lazySrc: String,\n    options: {\n      type: Object,\n      // For more information on types, navigate to:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n      default: () => ({\n        root: undefined,\n        rootMargin: undefined,\n        threshold: undefined,\n      }),\n    } as PropValidator<IntersectionObserverInit>,\n    position: {\n      type: String,\n      default: 'center center',\n    },\n    sizes: String,\n    src: {\n      type: [String, Object],\n      default: '',\n    } as PropValidator<string | srcObject>,\n    srcset: String,\n    transition: {\n      type: [Boolean, String],\n      default: 'fade-transition',\n    },\n  },\n\n  data () {\n    return {\n      currentSrc: '', // Set from srcset\n      image: null as HTMLImageElement | null,\n      isLoading: true,\n      calculatedAspectRatio: undefined as number | undefined,\n      naturalWidth: undefined as number | undefined,\n      hasError: false,\n    }\n  },\n\n  computed: {\n    computedAspectRatio (): number {\n      return Number(this.normalisedSrc.aspect || this.calculatedAspectRatio)\n    },\n    normalisedSrc (): srcObject {\n      return this.src && typeof this.src === 'object'\n        ? {\n          src: this.src.src,\n          srcset: this.srcset || this.src.srcset,\n          lazySrc: this.lazySrc || this.src.lazySrc,\n          aspect: Number(this.aspectRatio || this.src.aspect),\n        } : {\n          src: this.src,\n          srcset: this.srcset,\n          lazySrc: this.lazySrc,\n          aspect: Number(this.aspectRatio || 0),\n        }\n    },\n    __cachedImage (): VNode | [] {\n      if (!(this.normalisedSrc.src || this.normalisedSrc.lazySrc || this.gradient)) return []\n\n      const backgroundImage: string[] = []\n      const src = this.isLoading ? this.normalisedSrc.lazySrc : this.currentSrc\n\n      if (this.gradient) backgroundImage.push(`linear-gradient(${this.gradient})`)\n      if (src) backgroundImage.push(`url(\"${src}\")`)\n\n      const image = this.$createElement('div', {\n        staticClass: 'v-image__image',\n        class: {\n          'v-image__image--preload': this.isLoading,\n          'v-image__image--contain': this.contain,\n          'v-image__image--cover': !this.contain,\n        },\n        style: {\n          backgroundImage: backgroundImage.join(', '),\n          backgroundPosition: this.position,\n        },\n        key: +this.isLoading,\n      })\n\n      /* istanbul ignore if */\n      if (!this.transition) return image\n\n      return this.$createElement('transition', {\n        attrs: {\n          name: this.transition,\n          mode: 'in-out',\n        },\n      }, [image])\n    },\n  },\n\n  watch: {\n    src () {\n      // Force re-init when src changes\n      if (!this.isLoading) this.init(undefined, undefined, true)\n      else this.loadImage()\n    },\n    '$vuetify.breakpoint.width': 'getSrc',\n  },\n\n  mounted () {\n    this.init()\n  },\n\n  methods: {\n    init (\n      entries?: IntersectionObserverEntry[],\n      observer?: IntersectionObserver,\n      isIntersecting?: boolean\n    ) {\n      // If the current browser supports the intersection\n      // observer api, the image is not observable, and\n      // the eager prop isn't being used, do not load\n      if (\n        hasIntersect &&\n        !isIntersecting &&\n        !this.eager\n      ) return\n\n      if (this.normalisedSrc.lazySrc) {\n        const lazyImg = new Image()\n        lazyImg.src = this.normalisedSrc.lazySrc\n        this.pollForSize(lazyImg, null)\n      }\n      /* istanbul ignore else */\n      if (this.normalisedSrc.src) this.loadImage()\n    },\n    onLoad () {\n      this.getSrc()\n      this.isLoading = false\n      this.$emit('load', this.src)\n\n      if (\n        this.image &&\n        (this.normalisedSrc.src.endsWith('.svg') || this.normalisedSrc.src.startsWith('data:image/svg+xml'))\n      ) {\n        if (this.image.naturalHeight && this.image.naturalWidth) {\n          this.naturalWidth = this.image.naturalWidth\n          this.calculatedAspectRatio = this.image.naturalWidth / this.image.naturalHeight\n        } else {\n          this.calculatedAspectRatio = 1\n        }\n      }\n    },\n    onError () {\n      this.hasError = true\n      this.$emit('error', this.src)\n    },\n    getSrc () {\n      /* istanbul ignore else */\n      if (this.image) this.currentSrc = this.image.currentSrc || this.image.src\n    },\n    loadImage () {\n      const image = new Image()\n      this.image = image\n\n      image.onload = () => {\n        /* istanbul ignore if */\n        if (image.decode) {\n          image.decode().catch((err: DOMException) => {\n            consoleWarn(\n              `Failed to decode image, trying to render anyway\\n\\n` +\n              `src: ${this.normalisedSrc.src}` +\n              (err.message ? `\\nOriginal error: ${err.message}` : ''),\n              this\n            )\n          }).then(this.onLoad)\n        } else {\n          this.onLoad()\n        }\n      }\n      image.onerror = this.onError\n\n      this.hasError = false\n      this.sizes && (image.sizes = this.sizes)\n      this.normalisedSrc.srcset && (image.srcset = this.normalisedSrc.srcset)\n      image.src = this.normalisedSrc.src\n      this.$emit('loadstart', this.normalisedSrc.src)\n\n      this.aspectRatio || this.pollForSize(image)\n      this.getSrc()\n    },\n    pollForSize (img: HTMLImageElement, timeout: number | null = 100) {\n      const poll = () => {\n        const { naturalHeight, naturalWidth } = img\n\n        if (naturalHeight || naturalWidth) {\n          this.naturalWidth = naturalWidth\n          this.calculatedAspectRatio = naturalWidth / naturalHeight\n        } else if (!img.complete && this.isLoading && !this.hasError && timeout != null) {\n          setTimeout(poll, timeout)\n        }\n      }\n\n      poll()\n    },\n    genContent () {\n      const content: VNode = VResponsive.options.methods.genContent.call(this)\n      if (this.naturalWidth) {\n        this._b(content.data!, 'div', {\n          style: { width: `${this.naturalWidth}px` },\n        })\n      }\n\n      return content\n    },\n    __genPlaceholder (): VNode | void {\n      const slot = getSlot(this, 'placeholder')\n      if (slot) {\n        const placeholder = this.isLoading\n          ? [this.$createElement('div', {\n            staticClass: 'v-image__placeholder',\n          }, slot)]\n          : []\n\n        if (!this.transition) return placeholder[0]\n\n        return this.$createElement('transition', {\n          props: {\n            appear: true,\n            name: this.transition,\n          },\n        }, placeholder)\n      }\n    },\n  },\n\n  render (h): VNode {\n    const node = VResponsive.options.render.call(this, h)\n\n    const data = mergeData(node.data!, {\n      staticClass: 'v-image',\n      attrs: {\n        'aria-label': this.alt,\n        role: this.alt ? 'img' : undefined,\n      },\n      class: this.themeClasses,\n      // Only load intersect directive if it\n      // will work in the current browser.\n      directives: hasIntersect\n        ? [{\n          name: 'intersect',\n          modifiers: { once: true },\n          value: {\n            handler: this.init,\n            options: this.options,\n          },\n        }]\n        : undefined,\n    })\n\n    node.children = [\n      this.__cachedSizer,\n      this.__cachedImage,\n      this.__genPlaceholder(),\n      this.genContent(),\n    ] as VNode[]\n\n    return h(node.tag, data, node.children)\n  },\n})\n","// Styles\nimport './VTextarea.sass'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport Vue from 'vue'\n\ninterface options extends Vue {\n  $refs: {\n    input: HTMLTextAreaElement\n  }\n}\n\nconst baseMixins = mixins<options &\n  InstanceType<typeof VTextField>\n>(\n  VTextField\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-textarea',\n\n  props: {\n    autoGrow: Boolean,\n    noResize: Boolean,\n    rowHeight: {\n      type: [Number, String],\n      default: 24,\n      validator: (v: any) => !isNaN(parseFloat(v)),\n    },\n    rows: {\n      type: [Number, String],\n      default: 5,\n      validator: (v: any) => !isNaN(parseInt(v, 10)),\n    },\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-textarea': true,\n        'v-textarea--auto-grow': this.autoGrow,\n        'v-textarea--no-resize': this.noResizeHandle,\n        ...VTextField.options.computed.classes.call(this),\n      }\n    },\n    noResizeHandle (): boolean {\n      return this.noResize || this.autoGrow\n    },\n  },\n\n  watch: {\n    autoGrow (val: boolean) {\n      this.$nextTick(() => {\n        val\n          ? this.calculateInputHeight()\n          : this.$refs.input?.style.removeProperty('height')\n      })\n    },\n    lazyValue () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n    rowHeight () {\n      this.autoGrow && this.$nextTick(this.calculateInputHeight)\n    },\n  },\n\n  mounted () {\n    setTimeout(() => {\n      this.autoGrow && this.calculateInputHeight()\n    }, 0)\n  },\n\n  methods: {\n    calculateInputHeight () {\n      const input = this.$refs.input\n      if (!input) return\n\n      input.style.height = '0'\n      const height = input.scrollHeight\n      const minHeight = parseInt(this.rows, 10) * parseFloat(this.rowHeight)\n      // This has to be done ASAP, waiting for Vue\n      // to update the DOM causes ugly layout jumping\n      input.style.height = Math.max(minHeight, height) + 'px'\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.tag = 'textarea'\n      delete input.data!.attrs!.type\n      input.data!.attrs!.rows = this.rows\n\n      return input\n    },\n    onInput (e: Event) {\n      VTextField.options.methods.onInput.call(this, e)\n      this.autoGrow && this.calculateInputHeight()\n    },\n    onKeyDown (e: KeyboardEvent) {\n      // Prevents closing of a\n      // dialog when pressing\n      // enter\n      if (this.isFocused && e.keyCode === 13) {\n        e.stopPropagation()\n      }\n\n      this.$emit('keydown', e)\n    },\n  },\n})\n","var render = function render(){var _vm=this,_c=_vm._self._c,_setup=_vm._self._setupProxy;return _c('v-container',{staticClass:\"messageCard pa-0 pink lighten-4\"},[_c('v-container',{staticClass:\"py-0\"},[_c('v-row',{staticClass:\"justify-center\"},[_c('v-col',{staticStyle:{\"flex-grow\":\"0\"}},[_c('v-img',{staticClass:\"customAvatar\",attrs:{\"src\":\"https://iwmevhczazoydtduamuc.supabase.co/storage/v1/object/public/avatars/rick%20avatar.png\"}})],1)],1),_c('v-row',{staticClass:\"justify-center ma-0 dense\"},[_c('p',{staticClass:\"userName\"},[_vm._v(_vm._s(_vm.$route.params.userName))])]),_c('v-row',{staticClass:\"ma-0 pa-0\"},[_c('p',{staticClass:\"messageLabel dense\"},[_vm._v(\"Send me anonymous messages\")])]),_c('v-container',{staticClass:\"messagePanel\",attrs:{\"fluid\":\"\",\"pa-0\":\"\"}},[_c('v-row',{staticClass:\"ma-0 pa-0\"},[_c('v-textarea',{attrs:{\"no-resize\":\"\",\"flat\":\"\",\"solo\":\"\",\"name\":\"input-2-1\",\"background-color\":\"transparent\",\"placeholder\":\"Your message here\"},model:{value:(_setup.message),callback:function ($$v) {_setup.message=$$v},expression:\"message\"}})],1)],1),_c('v-row',{staticClass:\"justify-center my-0 pa-0\"},[_c('v-btn',{staticClass:\"sendButton\",attrs:{\"depressed\":\"\",\"elevation\":\"0\",\"color\":\"#FCE4EC\",\"disabled\":_setup.loading,\"value\":_setup.loading ? 'Sending' : 'Send'},on:{\"click\":_setup.sendMessage}},[_vm._v(\" Send \")])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\n//# sourceMappingURL=helper.js.map","export class FunctionsError extends Error {\n    constructor(message, name = 'FunctionsError', context) {\n        super(message);\n        super.name = name;\n        this.context = context;\n    }\n}\nexport class FunctionsFetchError extends FunctionsError {\n    constructor(context) {\n        super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context);\n    }\n}\nexport class FunctionsRelayError extends FunctionsError {\n    constructor(context) {\n        super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context);\n    }\n}\nexport class FunctionsHttpError extends FunctionsError {\n    constructor(context) {\n        super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context);\n    }\n}\n//# sourceMappingURL=types.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { resolveFetch } from './helper';\nimport { FunctionsFetchError, FunctionsHttpError, FunctionsRelayError, } from './types';\nexport class FunctionsClient {\n    constructor(url, { headers = {}, customFetch, } = {}) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(customFetch);\n    }\n    /**\n     * Updates the authorization header\n     * @param token - the new jwt token sent in the authorisation header\n     */\n    setAuth(token) {\n        this.headers.Authorization = `Bearer ${token}`;\n    }\n    /**\n     * Invokes a function\n     * @param functionName - the name of the function to invoke\n     */\n    invoke(functionName, invokeOptions = {}) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { headers, body: functionArgs } = invokeOptions;\n                let _headers = {};\n                let body;\n                if (functionArgs &&\n                    ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)) {\n                    if ((typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n                        functionArgs instanceof ArrayBuffer) {\n                        // will work for File as File inherits Blob\n                        // also works for ArrayBuffer as it is the same underlying structure as a Blob\n                        _headers['Content-Type'] = 'application/octet-stream';\n                        body = functionArgs;\n                    }\n                    else if (typeof functionArgs === 'string') {\n                        // plain string\n                        _headers['Content-Type'] = 'text/plain';\n                        body = functionArgs;\n                    }\n                    else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n                        // don't set content-type headers\n                        // Request will automatically add the right boundary value\n                        body = functionArgs;\n                    }\n                    else {\n                        // default, assume this is JSON\n                        _headers['Content-Type'] = 'application/json';\n                        body = JSON.stringify(functionArgs);\n                    }\n                }\n                const response = yield this.fetch(`${this.url}/${functionName}`, {\n                    method: 'POST',\n                    // headers priority is (high to low):\n                    // 1. invoke-level headers\n                    // 2. client-level headers\n                    // 3. default Content-Type header\n                    headers: Object.assign(Object.assign(Object.assign({}, _headers), this.headers), headers),\n                    body,\n                }).catch((fetchError) => {\n                    throw new FunctionsFetchError(fetchError);\n                });\n                const isRelayError = response.headers.get('x-relay-error');\n                if (isRelayError && isRelayError === 'true') {\n                    throw new FunctionsRelayError(response);\n                }\n                if (!response.ok) {\n                    throw new FunctionsHttpError(response);\n                }\n                let responseType = ((_a = response.headers.get('Content-Type')) !== null && _a !== void 0 ? _a : 'text/plain').split(';')[0].trim();\n                let data;\n                if (responseType === 'application/json') {\n                    data = yield response.json();\n                }\n                else if (responseType === 'application/octet-stream') {\n                    data = yield response.blob();\n                }\n                else if (responseType === 'multipart/form-data') {\n                    data = yield response.formData();\n                }\n                else {\n                    // default to text\n                    data = yield response.text();\n                }\n                return { data, error: null };\n            }\n            catch (error) {\n                return { data: null, error };\n            }\n        });\n    }\n}\n//# sourceMappingURL=FunctionsClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch from 'cross-fetch';\nexport default class PostgrestBuilder {\n    constructor(builder) {\n        this.shouldThrowOnError = false;\n        this.method = builder.method;\n        this.url = builder.url;\n        this.headers = builder.headers;\n        this.schema = builder.schema;\n        this.body = builder.body;\n        this.shouldThrowOnError = builder.shouldThrowOnError;\n        this.signal = builder.signal;\n        this.allowEmpty = builder.allowEmpty;\n        if (builder.fetch) {\n            this.fetch = builder.fetch;\n        }\n        else if (typeof fetch === 'undefined') {\n            this.fetch = crossFetch;\n        }\n        else {\n            this.fetch = fetch;\n        }\n    }\n    /**\n     * If there's an error with the query, throwOnError will reject the promise by\n     * throwing the error instead of returning it as part of a successful response.\n     *\n     * {@link https://github.com/supabase/supabase-js/issues/92}\n     */\n    throwOnError() {\n        this.shouldThrowOnError = true;\n        return this;\n    }\n    then(onfulfilled, onrejected) {\n        // https://postgrest.org/en/stable/api.html#switching-schemas\n        if (this.schema === undefined) {\n            // skip\n        }\n        else if (['GET', 'HEAD'].includes(this.method)) {\n            this.headers['Accept-Profile'] = this.schema;\n        }\n        else {\n            this.headers['Content-Profile'] = this.schema;\n        }\n        if (this.method !== 'GET' && this.method !== 'HEAD') {\n            this.headers['Content-Type'] = 'application/json';\n        }\n        // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n        // https://github.com/supabase/postgrest-js/pull/247\n        const _fetch = this.fetch;\n        let res = _fetch(this.url.toString(), {\n            method: this.method,\n            headers: this.headers,\n            body: JSON.stringify(this.body),\n            signal: this.signal,\n        }).then((res) => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b, _c;\n            let error = null;\n            let data = null;\n            let count = null;\n            let status = res.status;\n            let statusText = res.statusText;\n            if (res.ok) {\n                if (this.method !== 'HEAD') {\n                    const body = yield res.text();\n                    if (body === '') {\n                        // Prefer: return=minimal\n                    }\n                    else if (this.headers['Accept'] === 'text/csv') {\n                        data = body;\n                    }\n                    else if (this.headers['Accept'] &&\n                        this.headers['Accept'].includes('application/vnd.pgrst.plan+text')) {\n                        data = body;\n                    }\n                    else {\n                        data = JSON.parse(body);\n                    }\n                }\n                const countHeader = (_a = this.headers['Prefer']) === null || _a === void 0 ? void 0 : _a.match(/count=(exact|planned|estimated)/);\n                const contentRange = (_b = res.headers.get('content-range')) === null || _b === void 0 ? void 0 : _b.split('/');\n                if (countHeader && contentRange && contentRange.length > 1) {\n                    count = parseInt(contentRange[1]);\n                }\n            }\n            else {\n                const body = yield res.text();\n                try {\n                    error = JSON.parse(body);\n                }\n                catch (_d) {\n                    error = {\n                        message: body,\n                    };\n                }\n                if (error && this.allowEmpty && ((_c = error === null || error === void 0 ? void 0 : error.details) === null || _c === void 0 ? void 0 : _c.includes('Results contain 0 rows'))) {\n                    error = null;\n                    status = 200;\n                    statusText = 'OK';\n                }\n                if (error && this.shouldThrowOnError) {\n                    throw error;\n                }\n            }\n            const postgrestResponse = {\n                error,\n                data,\n                count,\n                status,\n                statusText,\n            };\n            return postgrestResponse;\n        }));\n        if (!this.shouldThrowOnError) {\n            res = res.catch((fetchError) => ({\n                error: {\n                    message: `FetchError: ${fetchError.message}`,\n                    details: '',\n                    hint: '',\n                    code: fetchError.code || '',\n                },\n                data: null,\n                count: null,\n                status: 0,\n                statusText: '',\n            }));\n        }\n        return res.then(onfulfilled, onrejected);\n    }\n}\n//# sourceMappingURL=PostgrestBuilder.js.map","import PostgrestBuilder from './PostgrestBuilder';\nexport default class PostgrestTransformBuilder extends PostgrestBuilder {\n    /**\n     * Perform a SELECT on the query result.\n     *\n     * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n     * return modified rows. By calling this method, modified rows are returned in\n     * `data`.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     */\n    select(columns) {\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (this.headers['Prefer']) {\n            this.headers['Prefer'] += ',';\n        }\n        this.headers['Prefer'] += 'return=representation';\n        return this;\n    }\n    order(column, { ascending = true, nullsFirst, foreignTable, } = {}) {\n        const key = foreignTable ? `${foreignTable}.order` : 'order';\n        const existingOrder = this.url.searchParams.get(key);\n        this.url.searchParams.set(key, `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `count`.\n     *\n     * @param count - The maximum number of rows to return\n     * @param options - Named parameters\n     * @param options.foreignTable - Set this to limit rows of foreign tables\n     * instead of the current table\n     */\n    limit(count, { foreignTable } = {}) {\n        const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(key, `${count}`);\n        return this;\n    }\n    /**\n     * Limit the query result by `from` and `to` inclusively.\n     *\n     * @param from - The starting index from which to limit the result\n     * @param to - The last index to which to limit the result\n     * @param options - Named parameters\n     * @param options.foreignTable - Set this to limit rows of foreign tables\n     * instead of the current table\n     */\n    range(from, to, { foreignTable } = {}) {\n        const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`;\n        const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`;\n        this.url.searchParams.set(keyOffset, `${from}`);\n        // Range is inclusive, so add 1\n        this.url.searchParams.set(keyLimit, `${to - from + 1}`);\n        return this;\n    }\n    /**\n     * Set the AbortSignal for the fetch request.\n     *\n     * @param signal - The AbortSignal to use for the fetch request\n     */\n    abortSignal(signal) {\n        this.signal = signal;\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n     * returns an error.\n     */\n    single() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        return this;\n    }\n    /**\n     * Return `data` as a single object instead of an array of objects.\n     *\n     * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n     * this returns an error.\n     */\n    maybeSingle() {\n        this.headers['Accept'] = 'application/vnd.pgrst.object+json';\n        this.allowEmpty = true;\n        return this;\n    }\n    /**\n     * Return `data` as a string in CSV format.\n     */\n    csv() {\n        this.headers['Accept'] = 'text/csv';\n        return this;\n    }\n    /**\n     * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n     */\n    geojson() {\n        this.headers['Accept'] = 'application/geo+json';\n        return this;\n    }\n    /**\n     * Return `data` as the EXPLAIN plan for the query.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.analyze - If `true`, the query will be executed and the\n     * actual run time will be returned\n     *\n     * @param options.verbose - If `true`, the query identifier will be returned\n     * and `data` will include the output columns of the query\n     *\n     * @param options.settings - If `true`, include information on configuration\n     * parameters that affect query planning\n     *\n     * @param options.buffers - If `true`, include information on buffer usage\n     *\n     * @param options.wal - If `true`, include information on WAL record generation\n     *\n     * @param options.format - The format of the output, can be `\"text\"` (default)\n     * or `\"json\"`\n     */\n    explain({ analyze = false, verbose = false, settings = false, buffers = false, wal = false, format = 'text', } = {}) {\n        const options = [\n            analyze ? 'analyze' : null,\n            verbose ? 'verbose' : null,\n            settings ? 'settings' : null,\n            buffers ? 'buffers' : null,\n            wal ? 'wal' : null,\n        ]\n            .filter(Boolean)\n            .join('|');\n        // An Accept header can carry multiple media types but postgrest-js always sends one\n        const forMediatype = this.headers['Accept'];\n        this.headers['Accept'] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`;\n        if (format === 'json')\n            return this;\n        else\n            return this;\n    }\n    /**\n     * Rollback the query.\n     *\n     * `data` will still be returned, but the query is not committed.\n     */\n    rollback() {\n        var _a;\n        if (((_a = this.headers['Prefer']) !== null && _a !== void 0 ? _a : '').trim().length > 0) {\n            this.headers['Prefer'] += ',tx=rollback';\n        }\n        else {\n            this.headers['Prefer'] = 'tx=rollback';\n        }\n        return this;\n    }\n    /**\n     * Override the type of the returned `data`.\n     *\n     * @typeParam NewResult - The new result type to override with\n     */\n    returns() {\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestTransformBuilder.js.map","import PostgrestTransformBuilder from './PostgrestTransformBuilder';\nexport default class PostgrestFilterBuilder extends PostgrestTransformBuilder {\n    eq(column, value) {\n        this.url.searchParams.append(column, `eq.${value}`);\n        return this;\n    }\n    neq(column, value) {\n        this.url.searchParams.append(column, `neq.${value}`);\n        return this;\n    }\n    gt(column, value) {\n        this.url.searchParams.append(column, `gt.${value}`);\n        return this;\n    }\n    gte(column, value) {\n        this.url.searchParams.append(column, `gte.${value}`);\n        return this;\n    }\n    lt(column, value) {\n        this.url.searchParams.append(column, `lt.${value}`);\n        return this;\n    }\n    lte(column, value) {\n        this.url.searchParams.append(column, `lte.${value}`);\n        return this;\n    }\n    like(column, pattern) {\n        this.url.searchParams.append(column, `like.${pattern}`);\n        return this;\n    }\n    ilike(column, pattern) {\n        this.url.searchParams.append(column, `ilike.${pattern}`);\n        return this;\n    }\n    is(column, value) {\n        this.url.searchParams.append(column, `is.${value}`);\n        return this;\n    }\n    in(column, values) {\n        const cleanedValues = values\n            .map((s) => {\n            // handle postgrest reserved characters\n            // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n            if (typeof s === 'string' && new RegExp('[,()]').test(s))\n                return `\"${s}\"`;\n            else\n                return `${s}`;\n        })\n            .join(',');\n        this.url.searchParams.append(column, `in.(${cleanedValues})`);\n        return this;\n    }\n    contains(column, value) {\n        if (typeof value === 'string') {\n            // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n            // keep it simple and accept a string\n            this.url.searchParams.append(column, `cs.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cs.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    containedBy(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `cd.${value}`);\n        }\n        else if (Array.isArray(value)) {\n            // array\n            this.url.searchParams.append(column, `cd.{${value.join(',')}}`);\n        }\n        else {\n            // json\n            this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`);\n        }\n        return this;\n    }\n    rangeGt(column, range) {\n        this.url.searchParams.append(column, `sr.${range}`);\n        return this;\n    }\n    rangeGte(column, range) {\n        this.url.searchParams.append(column, `nxl.${range}`);\n        return this;\n    }\n    rangeLt(column, range) {\n        this.url.searchParams.append(column, `sl.${range}`);\n        return this;\n    }\n    rangeLte(column, range) {\n        this.url.searchParams.append(column, `nxr.${range}`);\n        return this;\n    }\n    rangeAdjacent(column, range) {\n        this.url.searchParams.append(column, `adj.${range}`);\n        return this;\n    }\n    overlaps(column, value) {\n        if (typeof value === 'string') {\n            // range\n            this.url.searchParams.append(column, `ov.${value}`);\n        }\n        else {\n            // array\n            this.url.searchParams.append(column, `ov.{${value.join(',')}}`);\n        }\n        return this;\n    }\n    textSearch(column, query, { config, type } = {}) {\n        let typePart = '';\n        if (type === 'plain') {\n            typePart = 'pl';\n        }\n        else if (type === 'phrase') {\n            typePart = 'ph';\n        }\n        else if (type === 'websearch') {\n            typePart = 'w';\n        }\n        const configPart = config === undefined ? '' : `(${config})`;\n        this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`);\n        return this;\n    }\n    match(query) {\n        Object.entries(query).forEach(([column, value]) => {\n            this.url.searchParams.append(column, `eq.${value}`);\n        });\n        return this;\n    }\n    not(column, operator, value) {\n        this.url.searchParams.append(column, `not.${operator}.${value}`);\n        return this;\n    }\n    /**\n     * Match only rows which satisfy at least one of the filters.\n     *\n     * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n     * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n     * to make sure it's properly sanitized.\n     *\n     * It's currently not possible to do an `.or()` filter across multiple tables.\n     *\n     * @param filters - The filters to use, following PostgREST syntax\n     * @param foreignTable - Set this to filter on foreign tables instead of the\n     * current table\n     */\n    or(filters, { foreignTable } = {}) {\n        const key = foreignTable ? `${foreignTable}.or` : 'or';\n        this.url.searchParams.append(key, `(${filters})`);\n        return this;\n    }\n    filter(column, operator, value) {\n        this.url.searchParams.append(column, `${operator}.${value}`);\n        return this;\n    }\n}\n//# sourceMappingURL=PostgrestFilterBuilder.js.map","import PostgrestFilterBuilder from './PostgrestFilterBuilder';\nexport default class PostgrestQueryBuilder {\n    constructor(url, { headers = {}, schema, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    /**\n     * Perform a SELECT query on the table or view.\n     *\n     * @param columns - The columns to retrieve, separated by commas\n     *\n     * @param options - Named parameters\n     *\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     *\n     * @param options.count - Count algorithm to use to count rows in the table or view.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    select(columns, { head = false, count, } = {}) {\n        const method = head ? 'HEAD' : 'GET';\n        // Remove whitespaces except when quoted\n        let quoted = false;\n        const cleanedColumns = (columns !== null && columns !== void 0 ? columns : '*')\n            .split('')\n            .map((c) => {\n            if (/\\s/.test(c) && !quoted) {\n                return '';\n            }\n            if (c === '\"') {\n                quoted = !quoted;\n            }\n            return c;\n        })\n            .join('');\n        this.url.searchParams.set('select', cleanedColumns);\n        if (count) {\n            this.headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an INSERT into the table or view.\n     *\n     * By default, inserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to insert. Pass an object to insert a single row\n     * or an array to insert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count inserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    insert(values, { count, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [];\n        const body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        if (Array.isArray(values)) {\n            const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), []);\n            if (columns.length > 0) {\n                const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`);\n                this.url.searchParams.set('columns', uniqueColumns.join(','));\n            }\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPSERT on the table or view. Depending on the column(s) passed\n     * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n     * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n     * exist, or if it does exist, perform an alternative action depending on\n     * `ignoreDuplicates`.\n     *\n     * By default, upserted rows are not returned. To return it, chain the call\n     * with `.select()`.\n     *\n     * @param values - The values to upsert with. Pass an object to upsert a\n     * single row or an array to upsert multiple rows.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n     * duplicate rows are determined. Two rows are duplicates if all the\n     * `onConflict` columns are equal.\n     *\n     * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n     * `false`, duplicate rows are merged with existing rows.\n     *\n     * @param options.count - Count algorithm to use to count upserted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    upsert(values, { onConflict, ignoreDuplicates = false, count, } = {}) {\n        const method = 'POST';\n        const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`];\n        if (onConflict !== undefined)\n            this.url.searchParams.set('on_conflict', onConflict);\n        const body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform an UPDATE on the table or view.\n     *\n     * By default, updated rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param values - The values to update with\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count updated rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    update(values, { count, } = {}) {\n        const method = 'PATCH';\n        const prefersHeaders = [];\n        const body = values;\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n    /**\n     * Perform a DELETE on the table or view.\n     *\n     * By default, deleted rows are not returned. To return it, chain the call\n     * with `.select()` after filters.\n     *\n     * @param options - Named parameters\n     *\n     * @param options.count - Count algorithm to use to count deleted rows.\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    delete({ count, } = {}) {\n        const method = 'DELETE';\n        const prefersHeaders = [];\n        if (count) {\n            prefersHeaders.push(`count=${count}`);\n        }\n        if (this.headers['Prefer']) {\n            prefersHeaders.unshift(this.headers['Prefer']);\n        }\n        this.headers['Prefer'] = prefersHeaders.join(',');\n        return new PostgrestFilterBuilder({\n            method,\n            url: this.url,\n            headers: this.headers,\n            schema: this.schema,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\n//# sourceMappingURL=PostgrestQueryBuilder.js.map","export const version = '1.1.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` };\n//# sourceMappingURL=constants.js.map","import PostgrestQueryBuilder from './PostgrestQueryBuilder';\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder';\nimport { DEFAULT_HEADERS } from './constants';\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nexport default class PostgrestClient {\n    // TODO: Add back shouldThrowOnError once we figure out the typings\n    /**\n     * Creates a PostgREST client.\n     *\n     * @param url - URL of the PostgREST endpoint\n     * @param options - Named parameters\n     * @param options.headers - Custom headers\n     * @param options.schema - Postgres schema to switch to\n     * @param options.fetch - Custom fetch\n     */\n    constructor(url, { headers = {}, schema, fetch, } = {}) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.schema = schema;\n        this.fetch = fetch;\n    }\n    from(relation) {\n        const url = new URL(`${this.url}/${relation}`);\n        return new PostgrestQueryBuilder(url, {\n            headers: Object.assign({}, this.headers),\n            schema: this.schema,\n            fetch: this.fetch,\n        });\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn - The function name to call\n     * @param args - The arguments to pass to the function call\n     * @param options - Named parameters\n     * @param options.head - When set to `true`, `data` will not be returned.\n     * Useful if you only need the count.\n     * @param options.count - Count algorithm to use to count rows returned by the\n     * function. Only applicable for [set-returning\n     * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n     *\n     * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n     * hood.\n     *\n     * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n     * statistics under the hood.\n     *\n     * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n     * numbers.\n     */\n    rpc(fn, args = {}, { head = false, count, } = {}) {\n        let method;\n        const url = new URL(`${this.url}/rpc/${fn}`);\n        let body;\n        if (head) {\n            method = 'HEAD';\n            Object.entries(args).forEach(([name, value]) => {\n                url.searchParams.append(name, `${value}`);\n            });\n        }\n        else {\n            method = 'POST';\n            body = args;\n        }\n        const headers = Object.assign({}, this.headers);\n        if (count) {\n            headers['Prefer'] = `count=${count}`;\n        }\n        return new PostgrestFilterBuilder({\n            method,\n            url,\n            headers,\n            schema: this.schema,\n            body,\n            fetch: this.fetch,\n            allowEmpty: false,\n        });\n    }\n}\n//# sourceMappingURL=PostgrestClient.js.map","export const version = '2.1.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` };\nexport const VSN = '1.0.0';\nexport const DEFAULT_TIMEOUT = 10000;\nexport const WS_CLOSE_NORMAL = 1000;\nexport var SOCKET_STATES;\n(function (SOCKET_STATES) {\n    SOCKET_STATES[SOCKET_STATES[\"connecting\"] = 0] = \"connecting\";\n    SOCKET_STATES[SOCKET_STATES[\"open\"] = 1] = \"open\";\n    SOCKET_STATES[SOCKET_STATES[\"closing\"] = 2] = \"closing\";\n    SOCKET_STATES[SOCKET_STATES[\"closed\"] = 3] = \"closed\";\n})(SOCKET_STATES || (SOCKET_STATES = {}));\nexport var CHANNEL_STATES;\n(function (CHANNEL_STATES) {\n    CHANNEL_STATES[\"closed\"] = \"closed\";\n    CHANNEL_STATES[\"errored\"] = \"errored\";\n    CHANNEL_STATES[\"joined\"] = \"joined\";\n    CHANNEL_STATES[\"joining\"] = \"joining\";\n    CHANNEL_STATES[\"leaving\"] = \"leaving\";\n})(CHANNEL_STATES || (CHANNEL_STATES = {}));\nexport var CHANNEL_EVENTS;\n(function (CHANNEL_EVENTS) {\n    CHANNEL_EVENTS[\"close\"] = \"phx_close\";\n    CHANNEL_EVENTS[\"error\"] = \"phx_error\";\n    CHANNEL_EVENTS[\"join\"] = \"phx_join\";\n    CHANNEL_EVENTS[\"reply\"] = \"phx_reply\";\n    CHANNEL_EVENTS[\"leave\"] = \"phx_leave\";\n    CHANNEL_EVENTS[\"access_token\"] = \"access_token\";\n})(CHANNEL_EVENTS || (CHANNEL_EVENTS = {}));\nexport var TRANSPORTS;\n(function (TRANSPORTS) {\n    TRANSPORTS[\"websocket\"] = \"websocket\";\n})(TRANSPORTS || (TRANSPORTS = {}));\nexport var CONNECTION_STATE;\n(function (CONNECTION_STATE) {\n    CONNECTION_STATE[\"Connecting\"] = \"connecting\";\n    CONNECTION_STATE[\"Open\"] = \"open\";\n    CONNECTION_STATE[\"Closing\"] = \"closing\";\n    CONNECTION_STATE[\"Closed\"] = \"closed\";\n})(CONNECTION_STATE || (CONNECTION_STATE = {}));\n//# sourceMappingURL=constants.js.map","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\nexport var REALTIME_PRESENCE_LISTEN_EVENTS;\n(function (REALTIME_PRESENCE_LISTEN_EVENTS) {\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"SYNC\"] = \"sync\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"JOIN\"] = \"join\";\n    REALTIME_PRESENCE_LISTEN_EVENTS[\"LEAVE\"] = \"leave\";\n})(REALTIME_PRESENCE_LISTEN_EVENTS || (REALTIME_PRESENCE_LISTEN_EVENTS = {}));\nexport default class RealtimePresence {\n    /**\n     * Initializes the Presence.\n     *\n     * @param channel - The RealtimeChannel\n     * @param opts - The options,\n     *        for example `{events: {state: 'state', diff: 'diff'}}`\n     */\n    constructor(channel, opts) {\n        this.channel = channel;\n        this.state = {};\n        this.pendingDiffs = [];\n        this.joinRef = null;\n        this.caller = {\n            onJoin: () => { },\n            onLeave: () => { },\n            onSync: () => { },\n        };\n        const events = (opts === null || opts === void 0 ? void 0 : opts.events) || {\n            state: 'presence_state',\n            diff: 'presence_diff',\n        };\n        this.channel._on(events.state, {}, (newState) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            this.joinRef = this.channel._joinRef();\n            this.state = RealtimePresence.syncState(this.state, newState, onJoin, onLeave);\n            this.pendingDiffs.forEach((diff) => {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n            });\n            this.pendingDiffs = [];\n            onSync();\n        });\n        this.channel._on(events.diff, {}, (diff) => {\n            const { onJoin, onLeave, onSync } = this.caller;\n            if (this.inPendingSyncState()) {\n                this.pendingDiffs.push(diff);\n            }\n            else {\n                this.state = RealtimePresence.syncDiff(this.state, diff, onJoin, onLeave);\n                onSync();\n            }\n        });\n        this.onJoin((key, currentPresences, newPresences) => {\n            this.channel._trigger('presence', {\n                event: 'join',\n                key,\n                currentPresences,\n                newPresences,\n            });\n        });\n        this.onLeave((key, currentPresences, leftPresences) => {\n            this.channel._trigger('presence', {\n                event: 'leave',\n                key,\n                currentPresences,\n                leftPresences,\n            });\n        });\n        this.onSync(() => {\n            this.channel._trigger('presence', { event: 'sync' });\n        });\n    }\n    /**\n     * Used to sync the list of presences on the server with the\n     * client's state.\n     *\n     * An optional `onJoin` and `onLeave` callback can be provided to\n     * react to changes in the client's local presences across\n     * disconnects and reconnects with the server.\n     *\n     * @internal\n     */\n    static syncState(currentState, newState, onJoin, onLeave) {\n        const state = this.cloneDeep(currentState);\n        const transformedState = this.transformState(newState);\n        const joins = {};\n        const leaves = {};\n        this.map(state, (key, presences) => {\n            if (!transformedState[key]) {\n                leaves[key] = presences;\n            }\n        });\n        this.map(transformedState, (key, newPresences) => {\n            const currentPresences = state[key];\n            if (currentPresences) {\n                const newPresenceRefs = newPresences.map((m) => m.presence_ref);\n                const curPresenceRefs = currentPresences.map((m) => m.presence_ref);\n                const joinedPresences = newPresences.filter((m) => curPresenceRefs.indexOf(m.presence_ref) < 0);\n                const leftPresences = currentPresences.filter((m) => newPresenceRefs.indexOf(m.presence_ref) < 0);\n                if (joinedPresences.length > 0) {\n                    joins[key] = joinedPresences;\n                }\n                if (leftPresences.length > 0) {\n                    leaves[key] = leftPresences;\n                }\n            }\n            else {\n                joins[key] = newPresences;\n            }\n        });\n        return this.syncDiff(state, { joins, leaves }, onJoin, onLeave);\n    }\n    /**\n     * Used to sync a diff of presence join and leave events from the\n     * server, as they happen.\n     *\n     * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n     * `onLeave` callbacks to react to a user joining or leaving from a\n     * device.\n     *\n     * @internal\n     */\n    static syncDiff(state, diff, onJoin, onLeave) {\n        const { joins, leaves } = {\n            joins: this.transformState(diff.joins),\n            leaves: this.transformState(diff.leaves),\n        };\n        if (!onJoin) {\n            onJoin = () => { };\n        }\n        if (!onLeave) {\n            onLeave = () => { };\n        }\n        this.map(joins, (key, newPresences) => {\n            var _a;\n            const currentPresences = (_a = state[key]) !== null && _a !== void 0 ? _a : [];\n            state[key] = this.cloneDeep(newPresences);\n            if (currentPresences.length > 0) {\n                const joinedPresenceRefs = state[key].map((m) => m.presence_ref);\n                const curPresences = currentPresences.filter((m) => joinedPresenceRefs.indexOf(m.presence_ref) < 0);\n                state[key].unshift(...curPresences);\n            }\n            onJoin(key, currentPresences, newPresences);\n        });\n        this.map(leaves, (key, leftPresences) => {\n            let currentPresences = state[key];\n            if (!currentPresences)\n                return;\n            const presenceRefsToRemove = leftPresences.map((m) => m.presence_ref);\n            currentPresences = currentPresences.filter((m) => presenceRefsToRemove.indexOf(m.presence_ref) < 0);\n            state[key] = currentPresences;\n            onLeave(key, currentPresences, leftPresences);\n            if (currentPresences.length === 0)\n                delete state[key];\n        });\n        return state;\n    }\n    /** @internal */\n    static map(obj, func) {\n        return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]));\n    }\n    /**\n     * Remove 'metas' key\n     * Change 'phx_ref' to 'presence_ref'\n     * Remove 'phx_ref' and 'phx_ref_prev'\n     *\n     * @example\n     * // returns {\n     *  abc123: [\n     *    { presence_ref: '2', user_id: 1 },\n     *    { presence_ref: '3', user_id: 2 }\n     *  ]\n     * }\n     * RealtimePresence.transformState({\n     *  abc123: {\n     *    metas: [\n     *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n     *      { phx_ref: '3', user_id: 2 }\n     *    ]\n     *  }\n     * })\n     *\n     * @internal\n     */\n    static transformState(state) {\n        state = this.cloneDeep(state);\n        return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n            const presences = state[key];\n            if ('metas' in presences) {\n                newState[key] = presences.metas.map((presence) => {\n                    presence['presence_ref'] = presence['phx_ref'];\n                    delete presence['phx_ref'];\n                    delete presence['phx_ref_prev'];\n                    return presence;\n                });\n            }\n            else {\n                newState[key] = presences;\n            }\n            return newState;\n        }, {});\n    }\n    /** @internal */\n    static cloneDeep(obj) {\n        return JSON.parse(JSON.stringify(obj));\n    }\n    /** @internal */\n    onJoin(callback) {\n        this.caller.onJoin = callback;\n    }\n    /** @internal */\n    onLeave(callback) {\n        this.caller.onLeave = callback;\n    }\n    /** @internal */\n    onSync(callback) {\n        this.caller.onSync = callback;\n    }\n    /** @internal */\n    inPendingSyncState() {\n        return !this.joinRef || this.joinRef !== this.channel._joinRef();\n    }\n}\n//# sourceMappingURL=RealtimePresence.js.map","/**\n * Helpers to convert the change Payload into native JS types.\n */\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\nexport var PostgresTypes;\n(function (PostgresTypes) {\n    PostgresTypes[\"abstime\"] = \"abstime\";\n    PostgresTypes[\"bool\"] = \"bool\";\n    PostgresTypes[\"date\"] = \"date\";\n    PostgresTypes[\"daterange\"] = \"daterange\";\n    PostgresTypes[\"float4\"] = \"float4\";\n    PostgresTypes[\"float8\"] = \"float8\";\n    PostgresTypes[\"int2\"] = \"int2\";\n    PostgresTypes[\"int4\"] = \"int4\";\n    PostgresTypes[\"int4range\"] = \"int4range\";\n    PostgresTypes[\"int8\"] = \"int8\";\n    PostgresTypes[\"int8range\"] = \"int8range\";\n    PostgresTypes[\"json\"] = \"json\";\n    PostgresTypes[\"jsonb\"] = \"jsonb\";\n    PostgresTypes[\"money\"] = \"money\";\n    PostgresTypes[\"numeric\"] = \"numeric\";\n    PostgresTypes[\"oid\"] = \"oid\";\n    PostgresTypes[\"reltime\"] = \"reltime\";\n    PostgresTypes[\"text\"] = \"text\";\n    PostgresTypes[\"time\"] = \"time\";\n    PostgresTypes[\"timestamp\"] = \"timestamp\";\n    PostgresTypes[\"timestamptz\"] = \"timestamptz\";\n    PostgresTypes[\"timetz\"] = \"timetz\";\n    PostgresTypes[\"tsrange\"] = \"tsrange\";\n    PostgresTypes[\"tstzrange\"] = \"tstzrange\";\n})(PostgresTypes || (PostgresTypes = {}));\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (columns, record, options = {}) => {\n    var _a;\n    const skipTypes = (_a = options.skipTypes) !== null && _a !== void 0 ? _a : [];\n    return Object.keys(record).reduce((acc, rec_key) => {\n        acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes);\n        return acc;\n    }, {});\n};\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (columnName, columns, record, skipTypes) => {\n    const column = columns.find((x) => x.name === columnName);\n    const colType = column === null || column === void 0 ? void 0 : column.type;\n    const value = record[columnName];\n    if (colType && !skipTypes.includes(colType)) {\n        return convertCell(colType, value);\n    }\n    return noop(value);\n};\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type, value) => {\n    // if data type is an array\n    if (type.charAt(0) === '_') {\n        const dataType = type.slice(1, type.length);\n        return toArray(value, dataType);\n    }\n    // If not null, convert to correct type.\n    switch (type) {\n        case PostgresTypes.bool:\n            return toBoolean(value);\n        case PostgresTypes.float4:\n        case PostgresTypes.float8:\n        case PostgresTypes.int2:\n        case PostgresTypes.int4:\n        case PostgresTypes.int8:\n        case PostgresTypes.numeric:\n        case PostgresTypes.oid:\n            return toNumber(value);\n        case PostgresTypes.json:\n        case PostgresTypes.jsonb:\n            return toJson(value);\n        case PostgresTypes.timestamp:\n            return toTimestampString(value); // Format to be consistent with PostgREST\n        case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n        case PostgresTypes.date: // To allow users to cast it based on Timezone\n        case PostgresTypes.daterange:\n        case PostgresTypes.int4range:\n        case PostgresTypes.int8range:\n        case PostgresTypes.money:\n        case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n        case PostgresTypes.text:\n        case PostgresTypes.time: // To allow users to cast it based on Timezone\n        case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n        case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n        case PostgresTypes.tsrange:\n        case PostgresTypes.tstzrange:\n            return noop(value);\n        default:\n            // Return the value for remaining types\n            return noop(value);\n    }\n};\nconst noop = (value) => {\n    return value;\n};\nexport const toBoolean = (value) => {\n    switch (value) {\n        case 't':\n            return true;\n        case 'f':\n            return false;\n        default:\n            return value;\n    }\n};\nexport const toNumber = (value) => {\n    if (typeof value === 'string') {\n        const parsedValue = parseFloat(value);\n        if (!Number.isNaN(parsedValue)) {\n            return parsedValue;\n        }\n    }\n    return value;\n};\nexport const toJson = (value) => {\n    if (typeof value === 'string') {\n        try {\n            return JSON.parse(value);\n        }\n        catch (error) {\n            console.log(`JSON parse error: ${error}`);\n            return value;\n        }\n    }\n    return value;\n};\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value, type) => {\n    if (typeof value !== 'string') {\n        return value;\n    }\n    const lastIdx = value.length - 1;\n    const closeBrace = value[lastIdx];\n    const openBrace = value[0];\n    // Confirm value is a Postgres array by checking curly brackets\n    if (openBrace === '{' && closeBrace === '}') {\n        let arr;\n        const valTrim = value.slice(1, lastIdx);\n        // TODO: find a better solution to separate Postgres array data\n        try {\n            arr = JSON.parse('[' + valTrim + ']');\n        }\n        catch (_) {\n            // WARNING: splitting on comma does not cover all edge cases\n            arr = valTrim ? valTrim.split(',') : [];\n        }\n        return arr.map((val) => convertCell(type, val));\n    }\n    return value;\n};\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value) => {\n    if (typeof value === 'string') {\n        return value.replace(' ', 'T');\n    }\n    return value;\n};\n//# sourceMappingURL=transformers.js.map","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n    constructor(callback, timerCalc) {\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n        this.timer = undefined;\n        this.tries = 0;\n        this.callback = callback;\n        this.timerCalc = timerCalc;\n    }\n    reset() {\n        this.tries = 0;\n        clearTimeout(this.timer);\n    }\n    // Cancels any previous scheduleTimeout and schedules callback\n    scheduleTimeout() {\n        clearTimeout(this.timer);\n        this.timer = setTimeout(() => {\n            this.tries = this.tries + 1;\n            this.callback();\n        }, this.timerCalc(this.tries + 1));\n    }\n}\n//# sourceMappingURL=timer.js.map","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\nexport default class Serializer {\n    constructor() {\n        this.HEADER_LENGTH = 1;\n    }\n    decode(rawPayload, callback) {\n        if (rawPayload.constructor === ArrayBuffer) {\n            return callback(this._binaryDecode(rawPayload));\n        }\n        if (typeof rawPayload === 'string') {\n            return callback(JSON.parse(rawPayload));\n        }\n        return callback({});\n    }\n    _binaryDecode(buffer) {\n        const view = new DataView(buffer);\n        const decoder = new TextDecoder();\n        return this._decodeBroadcast(buffer, view, decoder);\n    }\n    _decodeBroadcast(buffer, view, decoder) {\n        const topicSize = view.getUint8(1);\n        const eventSize = view.getUint8(2);\n        let offset = this.HEADER_LENGTH + 2;\n        const topic = decoder.decode(buffer.slice(offset, offset + topicSize));\n        offset = offset + topicSize;\n        const event = decoder.decode(buffer.slice(offset, offset + eventSize));\n        offset = offset + eventSize;\n        const data = JSON.parse(decoder.decode(buffer.slice(offset, buffer.byteLength)));\n        return { ref: null, topic: topic, event: event, payload: data };\n    }\n}\n//# sourceMappingURL=serializer.js.map","import { DEFAULT_TIMEOUT } from '../lib/constants';\nexport default class Push {\n    /**\n     * Initializes the Push\n     *\n     * @param channel The Channel\n     * @param event The event, for example `\"phx_join\"`\n     * @param payload The payload, for example `{user_id: 123}`\n     * @param timeout The push timeout in milliseconds\n     */\n    constructor(channel, event, payload = {}, timeout = DEFAULT_TIMEOUT) {\n        this.channel = channel;\n        this.event = event;\n        this.payload = payload;\n        this.timeout = timeout;\n        this.sent = false;\n        this.timeoutTimer = undefined;\n        this.ref = '';\n        this.receivedResp = null;\n        this.recHooks = [];\n        this.refEvent = null;\n        this.rateLimited = false;\n    }\n    resend(timeout) {\n        this.timeout = timeout;\n        this._cancelRefEvent();\n        this.ref = '';\n        this.refEvent = null;\n        this.receivedResp = null;\n        this.sent = false;\n        this.send();\n    }\n    send() {\n        if (this._hasReceived('timeout')) {\n            return;\n        }\n        this.startTimeout();\n        this.sent = true;\n        const status = this.channel.socket.push({\n            topic: this.channel.topic,\n            event: this.event,\n            payload: this.payload,\n            ref: this.ref,\n            join_ref: this.channel._joinRef(),\n        });\n        if (status === 'rate limited') {\n            this.rateLimited = true;\n        }\n    }\n    updatePayload(payload) {\n        this.payload = Object.assign(Object.assign({}, this.payload), payload);\n    }\n    receive(status, callback) {\n        var _a;\n        if (this._hasReceived(status)) {\n            callback((_a = this.receivedResp) === null || _a === void 0 ? void 0 : _a.response);\n        }\n        this.recHooks.push({ status, callback });\n        return this;\n    }\n    startTimeout() {\n        if (this.timeoutTimer) {\n            return;\n        }\n        this.ref = this.channel.socket._makeRef();\n        this.refEvent = this.channel._replyEventName(this.ref);\n        const callback = (payload) => {\n            this._cancelRefEvent();\n            this._cancelTimeout();\n            this.receivedResp = payload;\n            this._matchReceive(payload);\n        };\n        this.channel._on(this.refEvent, {}, callback);\n        this.timeoutTimer = setTimeout(() => {\n            this.trigger('timeout', {});\n        }, this.timeout);\n    }\n    trigger(status, response) {\n        if (this.refEvent)\n            this.channel._trigger(this.refEvent, { status, response });\n    }\n    destroy() {\n        this._cancelRefEvent();\n        this._cancelTimeout();\n    }\n    _cancelRefEvent() {\n        if (!this.refEvent) {\n            return;\n        }\n        this.channel._off(this.refEvent, {});\n    }\n    _cancelTimeout() {\n        clearTimeout(this.timeoutTimer);\n        this.timeoutTimer = undefined;\n    }\n    _matchReceive({ status, response, }) {\n        this.recHooks\n            .filter((h) => h.status === status)\n            .forEach((h) => h.callback(response));\n    }\n    _hasReceived(status) {\n        return this.receivedResp && this.receivedResp.status === status;\n    }\n}\n//# sourceMappingURL=push.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants';\nimport Push from './lib/push';\nimport Timer from './lib/timer';\nimport RealtimePresence from './RealtimePresence';\nimport * as Transformers from './lib/transformers';\nexport var REALTIME_POSTGRES_CHANGES_LISTEN_EVENT;\n(function (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT) {\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"ALL\"] = \"*\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"INSERT\"] = \"INSERT\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"UPDATE\"] = \"UPDATE\";\n    REALTIME_POSTGRES_CHANGES_LISTEN_EVENT[\"DELETE\"] = \"DELETE\";\n})(REALTIME_POSTGRES_CHANGES_LISTEN_EVENT || (REALTIME_POSTGRES_CHANGES_LISTEN_EVENT = {}));\nexport var REALTIME_LISTEN_TYPES;\n(function (REALTIME_LISTEN_TYPES) {\n    REALTIME_LISTEN_TYPES[\"BROADCAST\"] = \"broadcast\";\n    REALTIME_LISTEN_TYPES[\"PRESENCE\"] = \"presence\";\n    REALTIME_LISTEN_TYPES[\"POSTGRES_CHANGES\"] = \"postgres_changes\";\n})(REALTIME_LISTEN_TYPES || (REALTIME_LISTEN_TYPES = {}));\nexport var REALTIME_SUBSCRIBE_STATES;\n(function (REALTIME_SUBSCRIBE_STATES) {\n    REALTIME_SUBSCRIBE_STATES[\"SUBSCRIBED\"] = \"SUBSCRIBED\";\n    REALTIME_SUBSCRIBE_STATES[\"TIMED_OUT\"] = \"TIMED_OUT\";\n    REALTIME_SUBSCRIBE_STATES[\"CLOSED\"] = \"CLOSED\";\n    REALTIME_SUBSCRIBE_STATES[\"CHANNEL_ERROR\"] = \"CHANNEL_ERROR\";\n})(REALTIME_SUBSCRIBE_STATES || (REALTIME_SUBSCRIBE_STATES = {}));\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n **/\nexport default class RealtimeChannel {\n    constructor(\n    /** Topic name can be any string. */\n    topic, params = { config: {} }, socket) {\n        this.topic = topic;\n        this.params = params;\n        this.socket = socket;\n        this.bindings = {};\n        this.state = CHANNEL_STATES.closed;\n        this.joinedOnce = false;\n        this.pushBuffer = [];\n        this.params.config = Object.assign({\n            broadcast: { ack: false, self: false },\n            presence: { key: '' },\n        }, params.config);\n        this.timeout = this.socket.timeout;\n        this.joinPush = new Push(this, CHANNEL_EVENTS.join, this.params, this.timeout);\n        this.rejoinTimer = new Timer(() => this._rejoinUntilConnected(), this.socket.reconnectAfterMs);\n        this.joinPush.receive('ok', () => {\n            this.state = CHANNEL_STATES.joined;\n            this.rejoinTimer.reset();\n            this.pushBuffer.forEach((pushEvent) => pushEvent.send());\n            this.pushBuffer = [];\n        });\n        this._onClose(() => {\n            this.rejoinTimer.reset();\n            this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`);\n            this.state = CHANNEL_STATES.closed;\n            this.socket._remove(this);\n        });\n        this._onError((reason) => {\n            if (this._isLeaving() || this._isClosed()) {\n                return;\n            }\n            this.socket.log('channel', `error ${this.topic}`, reason);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this.joinPush.receive('timeout', () => {\n            if (!this._isJoining()) {\n                return;\n            }\n            this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout);\n            this.state = CHANNEL_STATES.errored;\n            this.rejoinTimer.scheduleTimeout();\n        });\n        this._on(CHANNEL_EVENTS.reply, {}, (payload, ref) => {\n            this._trigger(this._replyEventName(ref), payload);\n        });\n        this.presence = new RealtimePresence(this);\n    }\n    /** Subscribe registers your client with the server */\n    subscribe(callback, timeout = this.timeout) {\n        var _a, _b;\n        if (this.joinedOnce) {\n            throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`;\n        }\n        else {\n            const { config: { broadcast, presence }, } = this.params;\n            this._onError((e) => callback && callback('CHANNEL_ERROR', e));\n            this._onClose(() => callback && callback('CLOSED'));\n            const accessTokenPayload = {};\n            const config = {\n                broadcast,\n                presence,\n                postgres_changes: (_b = (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.map((r) => r.filter)) !== null && _b !== void 0 ? _b : [],\n            };\n            if (this.socket.accessToken) {\n                accessTokenPayload.access_token = this.socket.accessToken;\n            }\n            this.updateJoinPayload(Object.assign({ config }, accessTokenPayload));\n            this.joinedOnce = true;\n            this._rejoin(timeout);\n            this.joinPush\n                .receive('ok', ({ postgres_changes: serverPostgresFilters, }) => {\n                var _a;\n                this.socket.accessToken &&\n                    this.socket.setAuth(this.socket.accessToken);\n                if (serverPostgresFilters === undefined) {\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n                else {\n                    const clientPostgresBindings = this.bindings.postgres_changes;\n                    const bindingsLen = (_a = clientPostgresBindings === null || clientPostgresBindings === void 0 ? void 0 : clientPostgresBindings.length) !== null && _a !== void 0 ? _a : 0;\n                    const newPostgresBindings = [];\n                    for (let i = 0; i < bindingsLen; i++) {\n                        const clientPostgresBinding = clientPostgresBindings[i];\n                        const { filter: { event, schema, table, filter }, } = clientPostgresBinding;\n                        const serverPostgresFilter = serverPostgresFilters && serverPostgresFilters[i];\n                        if (serverPostgresFilter &&\n                            serverPostgresFilter.event === event &&\n                            serverPostgresFilter.schema === schema &&\n                            serverPostgresFilter.table === table &&\n                            serverPostgresFilter.filter === filter) {\n                            newPostgresBindings.push(Object.assign(Object.assign({}, clientPostgresBinding), { id: serverPostgresFilter.id }));\n                        }\n                        else {\n                            this.unsubscribe();\n                            callback &&\n                                callback('CHANNEL_ERROR', new Error('mismatch between server and client bindings for postgres changes'));\n                            return;\n                        }\n                    }\n                    this.bindings.postgres_changes = newPostgresBindings;\n                    callback && callback('SUBSCRIBED');\n                    return;\n                }\n            })\n                .receive('error', (error) => {\n                callback &&\n                    callback('CHANNEL_ERROR', new Error(JSON.stringify(Object.values(error).join(', ') || 'error')));\n                return;\n            })\n                .receive('timeout', () => {\n                callback && callback('TIMED_OUT');\n                return;\n            });\n        }\n        return this;\n    }\n    presenceState() {\n        return this.presence.state;\n    }\n    track(payload, opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'track',\n                payload,\n            }, opts.timeout || this.timeout);\n        });\n    }\n    untrack(opts = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.send({\n                type: 'presence',\n                event: 'untrack',\n            }, opts);\n        });\n    }\n    on(type, filter, callback) {\n        return this._on(type, filter, callback);\n    }\n    send(payload, opts = {}) {\n        return new Promise((resolve) => {\n            var _a, _b, _c;\n            const push = this._push(payload.type, payload, opts.timeout || this.timeout);\n            if (push.rateLimited) {\n                resolve('rate limited');\n            }\n            if (payload.type === 'broadcast' &&\n                !((_c = (_b = (_a = this.params) === null || _a === void 0 ? void 0 : _a.config) === null || _b === void 0 ? void 0 : _b.broadcast) === null || _c === void 0 ? void 0 : _c.ack)) {\n                resolve('ok');\n            }\n            push.receive('ok', () => resolve('ok'));\n            push.receive('timeout', () => resolve('timed out'));\n        });\n    }\n    updateJoinPayload(payload) {\n        this.joinPush.updatePayload(payload);\n    }\n    /**\n     * Leaves the channel.\n     *\n     * Unsubscribes from server events, and instructs channel to terminate on server.\n     * Triggers onClose() hooks.\n     *\n     * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n     * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n     */\n    unsubscribe(timeout = this.timeout) {\n        this.state = CHANNEL_STATES.leaving;\n        const onClose = () => {\n            this.socket.log('channel', `leave ${this.topic}`);\n            this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef());\n        };\n        this.rejoinTimer.reset();\n        // Destroy joinPush to avoid connection timeouts during unscription phase\n        this.joinPush.destroy();\n        return new Promise((resolve) => {\n            const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout);\n            leavePush\n                .receive('ok', () => {\n                onClose();\n                resolve('ok');\n            })\n                .receive('timeout', () => {\n                onClose();\n                resolve('timed out');\n            })\n                .receive('error', () => {\n                resolve('error');\n            });\n            leavePush.send();\n            if (!this._canPush()) {\n                leavePush.trigger('ok', {});\n            }\n        });\n    }\n    /** @internal */\n    _push(event, payload, timeout = this.timeout) {\n        if (!this.joinedOnce) {\n            throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`;\n        }\n        let pushEvent = new Push(this, event, payload, timeout);\n        if (this._canPush()) {\n            pushEvent.send();\n        }\n        else {\n            pushEvent.startTimeout();\n            this.pushBuffer.push(pushEvent);\n        }\n        return pushEvent;\n    }\n    /**\n     * Overridable message hook\n     *\n     * Receives all events for specialized message handling before dispatching to the channel callbacks.\n     * Must return the payload, modified or unmodified.\n     *\n     * @internal\n     */\n    _onMessage(_event, payload, _ref) {\n        return payload;\n    }\n    /** @internal */\n    _isMember(topic) {\n        return this.topic === topic;\n    }\n    /** @internal */\n    _joinRef() {\n        return this.joinPush.ref;\n    }\n    /** @internal */\n    _trigger(type, payload, ref) {\n        var _a, _b;\n        const typeLower = type.toLocaleLowerCase();\n        const { close, error, leave, join } = CHANNEL_EVENTS;\n        const events = [close, error, leave, join];\n        if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n            return;\n        }\n        let handledPayload = this._onMessage(typeLower, payload, ref);\n        if (payload && !handledPayload) {\n            throw 'channel onMessage callbacks must return the payload, modified or unmodified';\n        }\n        if (['insert', 'update', 'delete'].includes(typeLower)) {\n            (_a = this.bindings.postgres_changes) === null || _a === void 0 ? void 0 : _a.filter((bind) => {\n                var _a, _b, _c;\n                return (((_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event) === '*' ||\n                    ((_c = (_b = bind.filter) === null || _b === void 0 ? void 0 : _b.event) === null || _c === void 0 ? void 0 : _c.toLocaleLowerCase()) === typeLower);\n            }).map((bind) => bind.callback(handledPayload, ref));\n        }\n        else {\n            (_b = this.bindings[typeLower]) === null || _b === void 0 ? void 0 : _b.filter((bind) => {\n                var _a, _b, _c, _d, _e, _f;\n                if (['broadcast', 'presence', 'postgres_changes'].includes(typeLower)) {\n                    if ('id' in bind) {\n                        const bindId = bind.id;\n                        const bindEvent = (_a = bind.filter) === null || _a === void 0 ? void 0 : _a.event;\n                        return (bindId &&\n                            ((_b = payload.ids) === null || _b === void 0 ? void 0 : _b.includes(bindId)) &&\n                            (bindEvent === '*' ||\n                                (bindEvent === null || bindEvent === void 0 ? void 0 : bindEvent.toLocaleLowerCase()) ===\n                                    ((_c = payload.data) === null || _c === void 0 ? void 0 : _c.type.toLocaleLowerCase())));\n                    }\n                    else {\n                        const bindEvent = (_e = (_d = bind === null || bind === void 0 ? void 0 : bind.filter) === null || _d === void 0 ? void 0 : _d.event) === null || _e === void 0 ? void 0 : _e.toLocaleLowerCase();\n                        return (bindEvent === '*' ||\n                            bindEvent === ((_f = payload === null || payload === void 0 ? void 0 : payload.event) === null || _f === void 0 ? void 0 : _f.toLocaleLowerCase()));\n                    }\n                }\n                else {\n                    return bind.type.toLocaleLowerCase() === typeLower;\n                }\n            }).map((bind) => {\n                if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n                    const postgresChanges = handledPayload.data;\n                    const { schema, table, commit_timestamp, type, errors } = postgresChanges;\n                    const enrichedPayload = {\n                        schema: schema,\n                        table: table,\n                        commit_timestamp: commit_timestamp,\n                        eventType: type,\n                        new: {},\n                        old: {},\n                        errors: errors,\n                    };\n                    handledPayload = Object.assign(Object.assign({}, enrichedPayload), this._getPayloadRecords(postgresChanges));\n                }\n                bind.callback(handledPayload, ref);\n            });\n        }\n    }\n    /** @internal */\n    _isClosed() {\n        return this.state === CHANNEL_STATES.closed;\n    }\n    /** @internal */\n    _isJoined() {\n        return this.state === CHANNEL_STATES.joined;\n    }\n    /** @internal */\n    _isJoining() {\n        return this.state === CHANNEL_STATES.joining;\n    }\n    /** @internal */\n    _isLeaving() {\n        return this.state === CHANNEL_STATES.leaving;\n    }\n    /** @internal */\n    _replyEventName(ref) {\n        return `chan_reply_${ref}`;\n    }\n    /** @internal */\n    _on(type, filter, callback) {\n        const typeLower = type.toLocaleLowerCase();\n        const binding = {\n            type: typeLower,\n            filter: filter,\n            callback: callback,\n        };\n        if (this.bindings[typeLower]) {\n            this.bindings[typeLower].push(binding);\n        }\n        else {\n            this.bindings[typeLower] = [binding];\n        }\n        return this;\n    }\n    /** @internal */\n    _off(type, filter) {\n        const typeLower = type.toLocaleLowerCase();\n        this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n            var _a;\n            return !(((_a = bind.type) === null || _a === void 0 ? void 0 : _a.toLocaleLowerCase()) === typeLower &&\n                RealtimeChannel.isEqual(bind.filter, filter));\n        });\n        return this;\n    }\n    /** @internal */\n    static isEqual(obj1, obj2) {\n        if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n            return false;\n        }\n        for (const k in obj1) {\n            if (obj1[k] !== obj2[k]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /** @internal */\n    _rejoinUntilConnected() {\n        this.rejoinTimer.scheduleTimeout();\n        if (this.socket.isConnected()) {\n            this._rejoin();\n        }\n    }\n    /**\n     * Registers a callback that will be executed when the channel closes.\n     *\n     * @internal\n     */\n    _onClose(callback) {\n        this._on(CHANNEL_EVENTS.close, {}, callback);\n    }\n    /**\n     * Registers a callback that will be executed when the channel encounteres an error.\n     *\n     * @internal\n     */\n    _onError(callback) {\n        this._on(CHANNEL_EVENTS.error, {}, (reason) => callback(reason));\n    }\n    /**\n     * Returns `true` if the socket is connected and the channel has been joined.\n     *\n     * @internal\n     */\n    _canPush() {\n        return this.socket.isConnected() && this._isJoined();\n    }\n    /** @internal */\n    _rejoin(timeout = this.timeout) {\n        if (this._isLeaving()) {\n            return;\n        }\n        this.socket._leaveOpenTopic(this.topic);\n        this.state = CHANNEL_STATES.joining;\n        this.joinPush.resend(timeout);\n    }\n    /** @internal */\n    _getPayloadRecords(payload) {\n        const records = {\n            new: {},\n            old: {},\n        };\n        if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n            records.new = Transformers.convertChangeData(payload.columns, payload.record);\n        }\n        if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n            records.old = Transformers.convertChangeData(payload.columns, payload.old_record);\n        }\n        return records;\n    }\n}\n//# sourceMappingURL=RealtimeChannel.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { w3cwebsocket } from 'websocket';\nimport { VSN, CHANNEL_EVENTS, TRANSPORTS, SOCKET_STATES, DEFAULT_TIMEOUT, WS_CLOSE_NORMAL, DEFAULT_HEADERS, CONNECTION_STATE, } from './lib/constants';\nimport Timer from './lib/timer';\nimport Serializer from './lib/serializer';\nimport RealtimeChannel from './RealtimeChannel';\nconst noop = () => { };\nexport default class RealtimeClient {\n    /**\n     * Initializes the Socket.\n     *\n     * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n     * @param options.transport The Websocket Transport, for example WebSocket.\n     * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n     * @param options.params The optional params to pass when connecting.\n     * @param options.headers The optional headers to pass when connecting.\n     * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n     * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n     * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n     * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n     * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n     */\n    constructor(endPoint, options) {\n        var _a;\n        this.accessToken = null;\n        this.channels = [];\n        this.endPoint = '';\n        this.headers = DEFAULT_HEADERS;\n        this.params = {};\n        this.timeout = DEFAULT_TIMEOUT;\n        this.transport = w3cwebsocket;\n        this.heartbeatIntervalMs = 30000;\n        this.heartbeatTimer = undefined;\n        this.pendingHeartbeatRef = null;\n        this.ref = 0;\n        this.logger = noop;\n        this.conn = null;\n        this.sendBuffer = [];\n        this.serializer = new Serializer();\n        this.stateChangeCallbacks = {\n            open: [],\n            close: [],\n            error: [],\n            message: [],\n        };\n        this.eventsPerSecondLimitMs = 100;\n        this.inThrottle = false;\n        this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`;\n        if (options === null || options === void 0 ? void 0 : options.params)\n            this.params = options.params;\n        if (options === null || options === void 0 ? void 0 : options.headers)\n            this.headers = Object.assign(Object.assign({}, this.headers), options.headers);\n        if (options === null || options === void 0 ? void 0 : options.timeout)\n            this.timeout = options.timeout;\n        if (options === null || options === void 0 ? void 0 : options.logger)\n            this.logger = options.logger;\n        if (options === null || options === void 0 ? void 0 : options.transport)\n            this.transport = options.transport;\n        if (options === null || options === void 0 ? void 0 : options.heartbeatIntervalMs)\n            this.heartbeatIntervalMs = options.heartbeatIntervalMs;\n        const eventsPerSecond = (_a = options === null || options === void 0 ? void 0 : options.params) === null || _a === void 0 ? void 0 : _a.eventsPerSecond;\n        if (eventsPerSecond)\n            this.eventsPerSecondLimitMs = Math.floor(1000 / eventsPerSecond);\n        this.reconnectAfterMs = (options === null || options === void 0 ? void 0 : options.reconnectAfterMs)\n            ? options.reconnectAfterMs\n            : (tries) => {\n                return [1000, 2000, 5000, 10000][tries - 1] || 10000;\n            };\n        this.encode = (options === null || options === void 0 ? void 0 : options.encode)\n            ? options.encode\n            : (payload, callback) => {\n                return callback(JSON.stringify(payload));\n            };\n        this.decode = (options === null || options === void 0 ? void 0 : options.decode)\n            ? options.decode\n            : this.serializer.decode.bind(this.serializer);\n        this.reconnectTimer = new Timer(() => __awaiter(this, void 0, void 0, function* () {\n            this.disconnect();\n            this.connect();\n        }), this.reconnectAfterMs);\n    }\n    /**\n     * Connects the socket, unless already connected.\n     */\n    connect() {\n        if (this.conn) {\n            return;\n        }\n        this.conn = new this.transport(this._endPointURL(), [], null, this.headers);\n        if (this.conn) {\n            this.conn.binaryType = 'arraybuffer';\n            this.conn.onopen = () => this._onConnOpen();\n            this.conn.onerror = (error) => this._onConnError(error);\n            this.conn.onmessage = (event) => this._onConnMessage(event);\n            this.conn.onclose = (event) => this._onConnClose(event);\n        }\n    }\n    /**\n     * Disconnects the socket.\n     *\n     * @param code A numeric status code to send on disconnect.\n     * @param reason A custom reason for the disconnect.\n     */\n    disconnect(code, reason) {\n        if (this.conn) {\n            this.conn.onclose = function () { }; // noop\n            if (code) {\n                this.conn.close(code, reason !== null && reason !== void 0 ? reason : '');\n            }\n            else {\n                this.conn.close();\n            }\n            this.conn = null;\n            // remove open handles\n            this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n            this.reconnectTimer.reset();\n        }\n    }\n    getChannels() {\n        return this.channels;\n    }\n    removeChannel(channel) {\n        return channel.unsubscribe().then((status) => {\n            if (this.channels.length === 0) {\n                this.disconnect();\n            }\n            return status;\n        });\n    }\n    removeAllChannels() {\n        return Promise.all(this.channels.map((channel) => channel.unsubscribe())).then((values) => {\n            this.disconnect();\n            return values;\n        });\n    }\n    /**\n     * Logs the message.\n     *\n     * For customized logging, `this.logger` can be overriden.\n     */\n    log(kind, msg, data) {\n        this.logger(kind, msg, data);\n    }\n    /**\n     * Returns the current state of the socket.\n     */\n    connectionState() {\n        switch (this.conn && this.conn.readyState) {\n            case SOCKET_STATES.connecting:\n                return CONNECTION_STATE.Connecting;\n            case SOCKET_STATES.open:\n                return CONNECTION_STATE.Open;\n            case SOCKET_STATES.closing:\n                return CONNECTION_STATE.Closing;\n            default:\n                return CONNECTION_STATE.Closed;\n        }\n    }\n    /**\n     * Retuns `true` is the connection is open.\n     */\n    isConnected() {\n        return this.connectionState() === CONNECTION_STATE.Open;\n    }\n    channel(topic, params = { config: {} }) {\n        if (!this.isConnected()) {\n            this.connect();\n        }\n        const chan = new RealtimeChannel(`realtime:${topic}`, params, this);\n        this.channels.push(chan);\n        return chan;\n    }\n    /**\n     * Push out a message if the socket is connected.\n     *\n     * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n     */\n    push(data) {\n        const { topic, event, payload, ref } = data;\n        let callback = () => {\n            this.encode(data, (result) => {\n                var _a;\n                (_a = this.conn) === null || _a === void 0 ? void 0 : _a.send(result);\n            });\n        };\n        this.log('push', `${topic} ${event} (${ref})`, payload);\n        if (this.isConnected()) {\n            if (['broadcast', 'presence', 'postgres_changes'].includes(event)) {\n                const isThrottled = this._throttle(callback)();\n                if (isThrottled) {\n                    return 'rate limited';\n                }\n            }\n            else {\n                callback();\n            }\n        }\n        else {\n            this.sendBuffer.push(callback);\n        }\n    }\n    /**\n     * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n     *\n     * @param token A JWT string.\n     */\n    setAuth(token) {\n        this.accessToken = token;\n        this.channels.forEach((channel) => {\n            token && channel.updateJoinPayload({ access_token: token });\n            if (channel.joinedOnce && channel._isJoined()) {\n                channel._push(CHANNEL_EVENTS.access_token, { access_token: token });\n            }\n        });\n    }\n    /**\n     * Return the next message ref, accounting for overflows\n     *\n     * @internal\n     */\n    _makeRef() {\n        let newRef = this.ref + 1;\n        if (newRef === this.ref) {\n            this.ref = 0;\n        }\n        else {\n            this.ref = newRef;\n        }\n        return this.ref.toString();\n    }\n    /**\n     * Unsubscribe from channels with the specified topic.\n     *\n     * @internal\n     */\n    _leaveOpenTopic(topic) {\n        let dupChannel = this.channels.find((c) => c.topic === topic && (c._isJoined() || c._isJoining()));\n        if (dupChannel) {\n            this.log('transport', `leaving duplicate topic \"${topic}\"`);\n            dupChannel.unsubscribe();\n        }\n    }\n    /**\n     * Removes a subscription from the socket.\n     *\n     * @param channel An open subscription.\n     *\n     * @internal\n     */\n    _remove(channel) {\n        this.channels = this.channels.filter((c) => c._joinRef() !== channel._joinRef());\n    }\n    /**\n     * Returns the URL of the websocket.\n     *\n     * @internal\n     */\n    _endPointURL() {\n        return this._appendParams(this.endPoint, Object.assign({}, this.params, { vsn: VSN }));\n    }\n    /** @internal */\n    _onConnMessage(rawMessage) {\n        this.decode(rawMessage.data, (msg) => {\n            let { topic, event, payload, ref } = msg;\n            if ((ref && ref === this.pendingHeartbeatRef) ||\n                event === (payload === null || payload === void 0 ? void 0 : payload.type)) {\n                this.pendingHeartbeatRef = null;\n            }\n            this.log('receive', `${payload.status || ''} ${topic} ${event} ${(ref && '(' + ref + ')') || ''}`, payload);\n            this.channels\n                .filter((channel) => channel._isMember(topic))\n                .forEach((channel) => channel._trigger(event, payload, ref));\n            this.stateChangeCallbacks.message.forEach((callback) => callback(msg));\n        });\n    }\n    /** @internal */\n    _onConnOpen() {\n        this.log('transport', `connected to ${this._endPointURL()}`);\n        this._flushSendBuffer();\n        this.reconnectTimer.reset();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = setInterval(() => this._sendHeartbeat(), this.heartbeatIntervalMs);\n        this.stateChangeCallbacks.open.forEach((callback) => callback());\n    }\n    /** @internal */\n    _onConnClose(event) {\n        this.log('transport', 'close', event);\n        this._triggerChanError();\n        this.heartbeatTimer && clearInterval(this.heartbeatTimer);\n        this.reconnectTimer.scheduleTimeout();\n        this.stateChangeCallbacks.close.forEach((callback) => callback(event));\n    }\n    /** @internal */\n    _onConnError(error) {\n        this.log('transport', error.message);\n        this._triggerChanError();\n        this.stateChangeCallbacks.error.forEach((callback) => callback(error));\n    }\n    /** @internal */\n    _triggerChanError() {\n        this.channels.forEach((channel) => channel._trigger(CHANNEL_EVENTS.error));\n    }\n    /** @internal */\n    _appendParams(url, params) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n        const prefix = url.match(/\\?/) ? '&' : '?';\n        const query = new URLSearchParams(params);\n        return `${url}${prefix}${query}`;\n    }\n    /** @internal */\n    _flushSendBuffer() {\n        if (this.isConnected() && this.sendBuffer.length > 0) {\n            this.sendBuffer.forEach((callback) => callback());\n            this.sendBuffer = [];\n        }\n    }\n    /** @internal */\n    _sendHeartbeat() {\n        var _a;\n        if (!this.isConnected()) {\n            return;\n        }\n        if (this.pendingHeartbeatRef) {\n            this.pendingHeartbeatRef = null;\n            this.log('transport', 'heartbeat timeout. Attempting to re-establish connection');\n            (_a = this.conn) === null || _a === void 0 ? void 0 : _a.close(WS_CLOSE_NORMAL, 'hearbeat timeout');\n            return;\n        }\n        this.pendingHeartbeatRef = this._makeRef();\n        this.push({\n            topic: 'phoenix',\n            event: 'heartbeat',\n            payload: {},\n            ref: this.pendingHeartbeatRef,\n        });\n        this.setAuth(this.accessToken);\n    }\n    /** @internal */\n    _throttle(callback, eventsPerSecondLimit = this.eventsPerSecondLimitMs) {\n        return () => {\n            if (this.inThrottle)\n                return true;\n            callback();\n            this.inThrottle = true;\n            setTimeout(() => {\n                this.inThrottle = false;\n            }, eventsPerSecondLimit);\n            return false;\n        };\n    }\n}\n//# sourceMappingURL=RealtimeClient.js.map","export class StorageError extends Error {\n    constructor(message) {\n        super(message);\n        this.__isStorageError = true;\n        this.name = 'StorageError';\n    }\n}\nexport function isStorageError(error) {\n    return typeof error === 'object' && error !== null && '__isStorageError' in error;\n}\nexport class StorageApiError extends StorageError {\n    constructor(message, status) {\n        super(message);\n        this.name = 'StorageApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class StorageUnknownError extends StorageError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'StorageUnknownError';\n        this.originalError = originalError;\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveResponse = () => __awaiter(void 0, void 0, void 0, function* () {\n    if (typeof Response === 'undefined') {\n        return (yield import('cross-fetch')).Response;\n    }\n    return Response;\n});\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { StorageApiError, StorageUnknownError } from './errors';\nimport { resolveResponse } from './helpers';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n    const Res = yield resolveResponse();\n    if (error instanceof Res) {\n        error.json().then((err) => {\n            reject(new StorageApiError(_getErrorMessage(err), error.status || 500));\n        });\n    }\n    else {\n        reject(new StorageUnknownError(_getErrorMessage(error), error));\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function get(fetcher, url, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'GET', url, options, parameters);\n    });\n}\nexport function post(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'POST', url, options, parameters, body);\n    });\n}\nexport function put(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'PUT', url, options, parameters, body);\n    });\n}\nexport function remove(fetcher, url, body, options, parameters) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return _handleRequest(fetcher, 'DELETE', url, options, parameters, body);\n    });\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isStorageError } from '../lib/errors';\nimport { get, post, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nconst DEFAULT_SEARCH_OPTIONS = {\n    limit: 100,\n    offset: 0,\n    sortBy: {\n        column: 'name',\n        order: 'asc',\n    },\n};\nconst DEFAULT_FILE_OPTIONS = {\n    cacheControl: '3600',\n    contentType: 'text/plain;charset=UTF-8',\n    upsert: false,\n};\nexport default class StorageFileApi {\n    constructor(url, headers = {}, bucketId, fetch) {\n        this.url = url;\n        this.headers = headers;\n        this.bucketId = bucketId;\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n     *\n     * @param method HTTP method.\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    uploadOrUpdate(method, path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                let body;\n                const options = Object.assign(Object.assign({}, DEFAULT_FILE_OPTIONS), fileOptions);\n                const headers = Object.assign(Object.assign({}, this.headers), (method === 'POST' && { 'x-upsert': String(options.upsert) }));\n                if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n                    body = new FormData();\n                    body.append('cacheControl', options.cacheControl);\n                    body.append('', fileBody);\n                }\n                else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n                    body = fileBody;\n                    body.append('cacheControl', options.cacheControl);\n                }\n                else {\n                    body = fileBody;\n                    headers['cache-control'] = `max-age=${options.cacheControl}`;\n                    headers['content-type'] = options.contentType;\n                }\n                const cleanPath = this._removeEmptyFolders(path);\n                const _path = this._getFinalPath(cleanPath);\n                const res = yield this.fetch(`${this.url}/object/${_path}`, {\n                    method,\n                    body: body,\n                    headers,\n                });\n                if (res.ok) {\n                    return {\n                        data: { path: cleanPath },\n                        error: null,\n                    };\n                }\n                else {\n                    const error = yield res.json();\n                    return { data: null, error };\n                }\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Uploads a file to an existing bucket.\n     *\n     * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    upload(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('POST', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Replaces an existing file at the specified path with a new one.\n     *\n     * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n     * @param fileBody The body of the file to be stored in the bucket.\n     */\n    update(path, fileBody, fileOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.uploadOrUpdate('PUT', path, fileBody, fileOptions);\n        });\n    }\n    /**\n     * Moves an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n     */\n    move(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/move`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Copies an existing file to a new path in the same bucket.\n     *\n     * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n     * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n     */\n    copy(fromPath, toPath) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/copy`, { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath }, { headers: this.headers });\n                return { data: { path: data.Key }, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param path The file path, including the current file name. For example `folder/image.png`.\n     * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */\n    createSignedUrl(path, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                let data = yield post(this.fetch, `${this.url}/object/sign/${_path}`, { expiresIn }, { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`);\n                data = { signedUrl };\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n     *\n     * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n     * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */\n    createSignedUrls(paths, expiresIn, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/object/sign/${this.bucketId}`, { expiresIn, paths }, { headers: this.headers });\n                const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n                    ? `&download=${options.download === true ? '' : options.download}`\n                    : '';\n                return {\n                    data: data.map((datum) => (Object.assign(Object.assign({}, datum), { signedUrl: datum.signedURL\n                            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n                            : null }))),\n                    error: null,\n                };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Downloads a file.\n     *\n     * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n     */\n    download(path) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const _path = this._getFinalPath(path);\n                const res = yield get(this.fetch, `${this.url}/object/${_path}`, {\n                    headers: this.headers,\n                    noResolveJson: true,\n                });\n                const data = yield res.blob();\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the URL for an asset in a public bucket.\n     * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n     *\n     * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n     * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n     */\n    getPublicUrl(path, options) {\n        const _path = this._getFinalPath(path);\n        const downloadQueryParam = (options === null || options === void 0 ? void 0 : options.download)\n            ? `?download=${options.download === true ? '' : options.download}`\n            : '';\n        return {\n            data: { publicUrl: encodeURI(`${this.url}/object/public/${_path}${downloadQueryParam}`) },\n        };\n    }\n    /**\n     * Deletes files within the same bucket\n     *\n     * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n     */\n    remove(paths) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/object/${this.bucketId}`, { prefixes: paths }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get file metadata\n     * @param id the file id to retrieve metadata\n     */\n    // async getMetadata(\n    //   id: string\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Update file metadata\n     * @param id the file id to update metadata\n     * @param meta the new file metadata\n     */\n    // async updateMetadata(\n    //   id: string,\n    //   meta: Metadata\n    // ): Promise<\n    //   | {\n    //       data: Metadata\n    //       error: null\n    //     }\n    //   | {\n    //       data: null\n    //       error: StorageError\n    //     }\n    // > {\n    //   try {\n    //     const data = await post(\n    //       this.fetch,\n    //       `${this.url}/metadata/${id}`,\n    //       { ...meta },\n    //       { headers: this.headers }\n    //     )\n    //     return { data, error: null }\n    //   } catch (error) {\n    //     if (isStorageError(error)) {\n    //       return { data: null, error }\n    //     }\n    //     throw error\n    //   }\n    // }\n    /**\n     * Lists all the files within a bucket.\n     * @param path The folder path.\n     */\n    list(path, options, parameters) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const body = Object.assign(Object.assign(Object.assign({}, DEFAULT_SEARCH_OPTIONS), options), { prefix: path || '' });\n                const data = yield post(this.fetch, `${this.url}/object/list/${this.bucketId}`, body, { headers: this.headers }, parameters);\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _getFinalPath(path) {\n        return `${this.bucketId}/${path}`;\n    }\n    _removeEmptyFolders(path) {\n        return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/');\n    }\n}\n//# sourceMappingURL=StorageFileApi.js.map","// generated by genversion\nexport const version = '2.0.0';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DEFAULT_HEADERS } from '../lib/constants';\nimport { isStorageError } from '../lib/errors';\nimport { get, post, put, remove } from '../lib/fetch';\nimport { resolveFetch } from '../lib/helpers';\nexport default class StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        this.url = url;\n        this.headers = Object.assign(Object.assign({}, DEFAULT_HEADERS), headers);\n        this.fetch = resolveFetch(fetch);\n    }\n    /**\n     * Retrieves the details of all Storage buckets within an existing project.\n     */\n    listBuckets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Retrieves the details of an existing Storage bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to retrieve.\n     */\n    getBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Creates a new Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are creating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n     * @returns newly created bucket id\n     */\n    createBucket(id, options = { public: false }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates a Storage bucket\n     *\n     * @param id A unique identifier for the bucket you are updating.\n     * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n     */\n    updateBucket(id, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield put(this.fetch, `${this.url}/bucket/${id}`, { id, name: id, public: options.public }, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Removes all objects inside a single bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to empty.\n     */\n    emptyBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield post(this.fetch, `${this.url}/bucket/${id}/empty`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n     * You must first `empty()` the bucket.\n     *\n     * @param id The unique identifier of the bucket you would like to delete.\n     */\n    deleteBucket(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield remove(this.fetch, `${this.url}/bucket/${id}`, {}, { headers: this.headers });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isStorageError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=StorageBucketApi.js.map","import StorageFileApi from './packages/StorageFileApi';\nimport StorageBucketApi from './packages/StorageBucketApi';\nexport class StorageClient extends StorageBucketApi {\n    constructor(url, headers = {}, fetch) {\n        super(url, headers, fetch);\n    }\n    /**\n     * Perform file operation in a bucket.\n     *\n     * @param id The bucket id to operate on.\n     */\n    from(id) {\n        return new StorageFileApi(this.url, this.headers, id, this.fetch);\n    }\n}\n//# sourceMappingURL=StorageClient.js.map","export const version = '2.0.4';\n//# sourceMappingURL=version.js.map","// constants.ts\nimport { version } from './version';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` };\n//# sourceMappingURL=constants.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport crossFetch, { Headers as CrossFetchHeaders } from 'cross-fetch';\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = crossFetch;\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const resolveHeadersConstructor = () => {\n    if (typeof Headers === 'undefined') {\n        return CrossFetchHeaders;\n    }\n    return Headers;\n};\nexport const fetchWithAuth = (supabaseKey, getAccessToken, customFetch) => {\n    const fetch = resolveFetch(customFetch);\n    const HeadersConstructor = resolveHeadersConstructor();\n    return (input, init) => __awaiter(void 0, void 0, void 0, function* () {\n        var _a;\n        const accessToken = (_a = (yield getAccessToken())) !== null && _a !== void 0 ? _a : supabaseKey;\n        let headers = new HeadersConstructor(init === null || init === void 0 ? void 0 : init.headers);\n        if (!headers.has('apikey')) {\n            headers.set('apikey', supabaseKey);\n        }\n        if (!headers.has('Authorization')) {\n            headers.set('Authorization', `Bearer ${accessToken}`);\n        }\n        return fetch(input, Object.assign(Object.assign({}, init), { headers }));\n    });\n};\n//# sourceMappingURL=fetch.js.map","export function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport function stripTrailingSlash(url) {\n    return url.replace(/\\/$/, '');\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function applySettingDefaults(options, defaults) {\n    const { db: dbOptions, auth: authOptions, realtime: realtimeOptions, global: globalOptions, } = options;\n    const { db: DEFAULT_DB_OPTIONS, auth: DEFAULT_AUTH_OPTIONS, realtime: DEFAULT_REALTIME_OPTIONS, global: DEFAULT_GLOBAL_OPTIONS, } = defaults;\n    return {\n        db: Object.assign(Object.assign({}, DEFAULT_DB_OPTIONS), dbOptions),\n        auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), authOptions),\n        realtime: Object.assign(Object.assign({}, DEFAULT_REALTIME_OPTIONS), realtimeOptions),\n        global: Object.assign(Object.assign({}, DEFAULT_GLOBAL_OPTIONS), globalOptions),\n    };\n}\n//# sourceMappingURL=helpers.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function expiresAt(expiresIn) {\n    const timeNow = Math.round(Date.now() / 1000);\n    return timeNow + expiresIn;\n}\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = (Math.random() * 16) | 0, v = c == 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n}\nexport const isBrowser = () => typeof window !== 'undefined';\nexport function getParameterByName(name, url) {\n    var _a;\n    if (!url)\n        url = ((_a = window === null || window === void 0 ? void 0 : window.location) === null || _a === void 0 ? void 0 : _a.href) || '';\n    // eslint-disable-next-line no-useless-escape\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'), results = regex.exec(url);\n    if (!results)\n        return null;\n    if (!results[2])\n        return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\nexport const resolveFetch = (customFetch) => {\n    let _fetch;\n    if (customFetch) {\n        _fetch = customFetch;\n    }\n    else if (typeof fetch === 'undefined') {\n        _fetch = (...args) => __awaiter(void 0, void 0, void 0, function* () { return yield (yield import('cross-fetch')).fetch(...args); });\n    }\n    else {\n        _fetch = fetch;\n    }\n    return (...args) => _fetch(...args);\n};\nexport const looksLikeFetchResponse = (maybeResponse) => {\n    return (typeof maybeResponse === 'object' &&\n        maybeResponse !== null &&\n        'status' in maybeResponse &&\n        'ok' in maybeResponse &&\n        'json' in maybeResponse &&\n        typeof maybeResponse.json === 'function');\n};\n// Storage helpers\nexport const setItemAsync = (storage, key, data) => __awaiter(void 0, void 0, void 0, function* () {\n    yield storage.setItem(key, JSON.stringify(data));\n});\nexport const getItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    const value = yield storage.getItem(key);\n    if (!value) {\n        return null;\n    }\n    try {\n        return JSON.parse(value);\n    }\n    catch (_a) {\n        return value;\n    }\n});\nexport const removeItemAsync = (storage, key) => __awaiter(void 0, void 0, void 0, function* () {\n    yield storage.removeItem(key);\n});\nexport const decodeBase64URL = (value) => {\n    try {\n        // atob is present in all browsers and nodejs >= 16\n        // but if it is not it will throw a ReferenceError in which case we can try to use Buffer\n        // replace are here to convert the Base64-URL into Base64 which is what atob supports\n        // replace with //g regex acts like replaceAll\n        return atob(value.replace(/[-]/g, '+').replace(/[_]/g, '/'));\n    }\n    catch (e) {\n        if (e instanceof ReferenceError) {\n            // running on nodejs < 16\n            // Buffer supports Base64-URL transparently\n            return Buffer.from(value, 'base64').toString('utf-8');\n        }\n        else {\n            throw e;\n        }\n    }\n};\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred {\n    constructor() {\n        // eslint-disable-next-line @typescript-eslint/no-extra-semi\n        ;\n        this.promise = new Deferred.promiseConstructor((res, rej) => {\n            // eslint-disable-next-line @typescript-eslint/no-extra-semi\n            ;\n            this.resolve = res;\n            this.reject = rej;\n        });\n    }\n}\nDeferred.promiseConstructor = Promise;\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token) {\n    const parts = token.split('.');\n    if (parts.length !== 3) {\n        throw new Error('JWT is not valid: not a JWT structure');\n    }\n    const base64Url = parts[1];\n    return JSON.parse(decodeBase64URL(base64Url));\n}\n//# sourceMappingURL=helpers.js.map","export class AuthError extends Error {\n    constructor(message) {\n        super(message);\n        this.__isAuthError = true;\n        this.name = 'AuthError';\n    }\n}\nexport function isAuthError(error) {\n    return typeof error === 'object' && error !== null && '__isAuthError' in error;\n}\nexport class AuthApiError extends AuthError {\n    constructor(message, status) {\n        super(message);\n        this.name = 'AuthApiError';\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class AuthUnknownError extends AuthError {\n    constructor(message, originalError) {\n        super(message);\n        this.name = 'AuthUnknownError';\n        this.originalError = originalError;\n    }\n}\nexport class CustomAuthError extends AuthError {\n    constructor(message, name, status) {\n        super(message);\n        this.name = name;\n        this.status = status;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n        };\n    }\n}\nexport class AuthSessionMissingError extends CustomAuthError {\n    constructor() {\n        super('Auth session missing!', 'AuthSessionMissingError', 400);\n    }\n}\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n    constructor(message) {\n        super(message, 'AuthInvalidCredentialsError', 400);\n    }\n}\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n    constructor(message, details = null) {\n        super(message, 'AuthImplicitGrantRedirectError', 500);\n        this.details = null;\n        this.details = details;\n    }\n    toJSON() {\n        return {\n            name: this.name,\n            message: this.message,\n            status: this.status,\n            details: this.details,\n        };\n    }\n}\nexport class AuthRetryableFetchError extends CustomAuthError {\n    constructor(message, status) {\n        super(message, 'AuthRetryableFetchError', status);\n    }\n}\n//# sourceMappingURL=errors.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { expiresAt, looksLikeFetchResponse } from './helpers';\nimport { AuthApiError, AuthRetryableFetchError, AuthUnknownError } from './errors';\nconst _getErrorMessage = (err) => err.msg || err.message || err.error_description || err.error || JSON.stringify(err);\nconst handleError = (error, reject) => __awaiter(void 0, void 0, void 0, function* () {\n    const NETWORK_ERROR_CODES = [502, 503, 504];\n    if (!looksLikeFetchResponse(error)) {\n        reject(new AuthRetryableFetchError(_getErrorMessage(error), 0));\n    }\n    else if (NETWORK_ERROR_CODES.includes(error.status)) {\n        // status in 500...599 range - server had an error, request might be retryed.\n        reject(new AuthRetryableFetchError(_getErrorMessage(error), error.status));\n    }\n    else {\n        // got a response from server that is not in the 500...599 range - should not retry\n        error\n            .json()\n            .then((err) => {\n            reject(new AuthApiError(_getErrorMessage(err), error.status || 500));\n        })\n            .catch((e) => {\n            // not a valid json response\n            reject(new AuthUnknownError(_getErrorMessage(e), e));\n        });\n    }\n});\nconst _getRequestParams = (method, options, parameters, body) => {\n    const params = { method, headers: (options === null || options === void 0 ? void 0 : options.headers) || {} };\n    if (method === 'GET') {\n        return params;\n    }\n    params.headers = Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, options === null || options === void 0 ? void 0 : options.headers);\n    params.body = JSON.stringify(body);\n    return Object.assign(Object.assign({}, params), parameters);\n};\nexport function _request(fetcher, method, url, options) {\n    var _a, _b;\n    return __awaiter(this, void 0, void 0, function* () {\n        const headers = (_a = options === null || options === void 0 ? void 0 : options.headers) !== null && _a !== void 0 ? _a : {};\n        if (options === null || options === void 0 ? void 0 : options.jwt) {\n            headers['Authorization'] = `Bearer ${options.jwt}`;\n        }\n        const qs = (_b = options === null || options === void 0 ? void 0 : options.query) !== null && _b !== void 0 ? _b : {};\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            qs['redirect_to'] = options.redirectTo;\n        }\n        const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : '';\n        const data = yield _handleRequest(fetcher, method, url + queryString, { headers, noResolveJson: options === null || options === void 0 ? void 0 : options.noResolveJson }, {}, options === null || options === void 0 ? void 0 : options.body);\n        return (options === null || options === void 0 ? void 0 : options.xform) ? options === null || options === void 0 ? void 0 : options.xform(data) : { data: Object.assign({}, data), error: null };\n    });\n}\nfunction _handleRequest(fetcher, method, url, options, parameters, body) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return new Promise((resolve, reject) => {\n            fetcher(url, _getRequestParams(method, options, parameters, body))\n                .then((result) => {\n                if (!result.ok)\n                    throw result;\n                if (options === null || options === void 0 ? void 0 : options.noResolveJson)\n                    return result;\n                return result.json();\n            })\n                .then((data) => resolve(data))\n                .catch((error) => handleError(error, reject));\n        });\n    });\n}\nexport function _sessionResponse(data) {\n    var _a;\n    let session = null;\n    if (hasSession(data)) {\n        session = Object.assign({}, data);\n        session.expires_at = expiresAt(data.expires_in);\n    }\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { session, user }, error: null };\n}\nexport function _userResponse(data) {\n    var _a;\n    const user = (_a = data.user) !== null && _a !== void 0 ? _a : data;\n    return { data: { user }, error: null };\n}\nexport function _generateLinkResponse(data) {\n    const { action_link, email_otp, hashed_token, redirect_to, verification_type } = data, rest = __rest(data, [\"action_link\", \"email_otp\", \"hashed_token\", \"redirect_to\", \"verification_type\"]);\n    const properties = {\n        action_link,\n        email_otp,\n        hashed_token,\n        redirect_to,\n        verification_type,\n    };\n    const user = Object.assign({}, rest);\n    return {\n        data: {\n            properties,\n            user,\n        },\n        error: null,\n    };\n}\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data) {\n    return data.access_token && data.refresh_token && data.expires_in;\n}\n//# sourceMappingURL=fetch.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { _generateLinkResponse, _request, _userResponse } from './lib/fetch';\nimport { resolveFetch } from './lib/helpers';\nimport { isAuthError } from './lib/errors';\nexport default class GoTrueAdminApi {\n    constructor({ url = '', headers = {}, fetch, }) {\n        this.url = url;\n        this.headers = headers;\n        this.fetch = resolveFetch(fetch);\n        this.mfa = {\n            listFactors: this._listFactors.bind(this),\n            deleteFactor: this._deleteFactor.bind(this),\n        };\n    }\n    /**\n     * Removes a logged-in session.\n     * @param jwt A valid, logged-in JWT.\n     */\n    signOut(jwt) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield _request(this.fetch, 'POST', `${this.url}/logout`, {\n                    headers: this.headers,\n                    jwt,\n                    noResolveJson: true,\n                });\n                return { data: null, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Sends an invite link to an email address.\n     * @param email The email address of the user.\n     * @param options.redirectTo A URL or mobile deeplink to send the user to after they are confirmed.\n     * @param options.data Optional user metadata\n     */\n    inviteUserByEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/invite`, {\n                    body: { email, data: options.data },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates email links and OTPs to be sent via a custom email provider.\n     * @param email The user's email.\n     * @param options.password User password. For signup only.\n     * @param options.data Optional user metadata. For signup only.\n     * @param options.redirectTo The redirect url which should be appended to the generated link\n     */\n    generateLink(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { options } = params, rest = __rest(params, [\"options\"]);\n                const body = Object.assign(Object.assign({}, rest), options);\n                if ('newEmail' in rest) {\n                    // replace newEmail with new_email in request body\n                    body.new_email = rest === null || rest === void 0 ? void 0 : rest.newEmail;\n                    delete body['newEmail'];\n                }\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n                    body: body,\n                    headers: this.headers,\n                    xform: _generateLinkResponse,\n                    redirectTo: options === null || options === void 0 ? void 0 : options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return {\n                        data: {\n                            properties: null,\n                            user: null,\n                        },\n                        error,\n                    };\n                }\n                throw error;\n            }\n        });\n    }\n    // User Admin API\n    /**\n     * Creates a new user.\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    createUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get a list of users.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    listUsers() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data, error } = yield _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n                    headers: this.headers,\n                });\n                if (error)\n                    throw error;\n                return { data: Object.assign({}, data), error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { users: [] }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Get user by id.\n     *\n     * @param uid The user's unique identifier\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    getUserById(uid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates the user data.\n     *\n     * @param attributes The data you want to update.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    updateUserById(uid, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n                    body: attributes,\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Delete a user. Requires a `service_role` key.\n     *\n     * @param id The user id you want to remove.\n     *\n     * This function should only be called on a server. Never expose your `service_role` key in the browser.\n     */\n    deleteUser(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n                    headers: this.headers,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _listFactors(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield _request(this.fetch, 'GET', `${this.url}/admin/users/${params.userId}/factors`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _deleteFactor(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const data = yield _request(this.fetch, 'DELETE', `${this.url}/admin/users/${params.userId}/factors/${params.id}`, {\n                    headers: this.headers,\n                });\n                return { data, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n}\n//# sourceMappingURL=GoTrueAdminApi.js.map","// Generated by genversion.\nexport const version = '2.2.1';\n//# sourceMappingURL=version.js.map","import { version } from './version';\nexport const GOTRUE_URL = 'http://localhost:9999';\nexport const STORAGE_KEY = 'supabase.auth.token';\nexport const AUDIENCE = '';\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` };\nexport const EXPIRY_MARGIN = 10; // in seconds\nexport const NETWORK_FAILURE = {\n    MAX_RETRIES: 10,\n    RETRY_INTERVAL: 2, // in deciseconds\n};\n//# sourceMappingURL=constants.js.map","import { isBrowser } from './helpers';\nconst localStorageAdapter = {\n    getItem: (key) => {\n        if (!isBrowser()) {\n            return null;\n        }\n        return globalThis.localStorage.getItem(key);\n    },\n    setItem: (key, value) => {\n        if (!isBrowser()) {\n            return;\n        }\n        globalThis.localStorage.setItem(key, value);\n    },\n    removeItem: (key) => {\n        if (!isBrowser()) {\n            return;\n        }\n        globalThis.localStorage.removeItem(key);\n    },\n};\nexport default localStorageAdapter;\n//# sourceMappingURL=local-storage.js.map","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n    if (typeof globalThis === 'object')\n        return;\n    try {\n        Object.defineProperty(Object.prototype, '__magic__', {\n            get: function () {\n                return this;\n            },\n            configurable: true,\n        });\n        // @ts-expect-error 'Allow access to magic'\n        __magic__.globalThis = __magic__;\n        // @ts-expect-error 'Allow access to magic'\n        delete Object.prototype.__magic__;\n    }\n    catch (e) {\n        if (typeof self !== 'undefined') {\n            // @ts-expect-error 'Allow access to globals'\n            self.globalThis = self;\n        }\n    }\n}\n//# sourceMappingURL=polyfills.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport GoTrueAdminApi from './GoTrueAdminApi';\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, NETWORK_FAILURE, STORAGE_KEY, } from './lib/constants';\nimport { AuthImplicitGrantRedirectError, AuthInvalidCredentialsError, AuthRetryableFetchError, AuthSessionMissingError, AuthUnknownError, isAuthError, } from './lib/errors';\nimport { _request, _sessionResponse, _userResponse } from './lib/fetch';\nimport { Deferred, getItemAsync, getParameterByName, isBrowser, removeItemAsync, resolveFetch, setItemAsync, uuid, decodeJWTPayload, } from './lib/helpers';\nimport localStorageAdapter from './lib/local-storage';\nimport { polyfillGlobalThis } from './lib/polyfills';\npolyfillGlobalThis(); // Make \"globalThis\" available\nconst DEFAULT_OPTIONS = {\n    url: GOTRUE_URL,\n    storageKey: STORAGE_KEY,\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n    headers: DEFAULT_HEADERS,\n};\nexport default class GoTrueClient {\n    /**\n     * Create a new client for use in the browser.\n     */\n    constructor(options) {\n        this.stateChangeEmitters = new Map();\n        this.networkRetries = 0;\n        this.refreshingDeferred = null;\n        /**\n         * Keeps track of the async client initialization.\n         * When null or not yet resolved the auth state is `unknown`\n         * Once resolved the the auth state is known and it's save to call any further client methods.\n         * Keep extra care to never reject or throw uncaught errors\n         */\n        this.initializePromise = null;\n        this.detectSessionInUrl = true;\n        const settings = Object.assign(Object.assign({}, DEFAULT_OPTIONS), options);\n        this.inMemorySession = null;\n        this.storageKey = settings.storageKey;\n        this.autoRefreshToken = settings.autoRefreshToken;\n        this.persistSession = settings.persistSession;\n        this.storage = settings.storage || localStorageAdapter;\n        this.admin = new GoTrueAdminApi({\n            url: settings.url,\n            headers: settings.headers,\n            fetch: settings.fetch,\n        });\n        this.url = settings.url;\n        this.headers = settings.headers;\n        this.fetch = resolveFetch(settings.fetch);\n        this.detectSessionInUrl = settings.detectSessionInUrl;\n        this.initialize();\n        this.mfa = {\n            verify: this._verify.bind(this),\n            enroll: this._enroll.bind(this),\n            unenroll: this._unenroll.bind(this),\n            challenge: this._challenge.bind(this),\n            listFactors: this._listFactors.bind(this),\n            challengeAndVerify: this._challengeAndVerify.bind(this),\n            getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n        };\n    }\n    /**\n     * Initializes the client session either from the url or from storage.\n     * This method is automatically called when instantiating the client, but should also be called\n     * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n     */\n    initialize() {\n        if (!this.initializePromise) {\n            this.initializePromise = this._initialize();\n        }\n        return this.initializePromise;\n    }\n    /**\n     * IMPORTANT:\n     * 1. Never throw in this method, as it is called from the constructor\n     * 2. Never return a session from this method as it would be cached over\n     *    the whole lifetime of the client\n     */\n    _initialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.initializePromise) {\n                return this.initializePromise;\n            }\n            try {\n                if (this.detectSessionInUrl && this._isImplicitGrantFlow()) {\n                    const { data, error } = yield this._getSessionFromUrl();\n                    if (error) {\n                        // failed login attempt via url,\n                        // remove old session as in verifyOtp, signUp and signInWith*\n                        yield this._removeSession();\n                        return { error };\n                    }\n                    const { session, redirectType } = data;\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                    if (redirectType === 'recovery') {\n                        this._notifyAllSubscribers('PASSWORD_RECOVERY', session);\n                    }\n                    return { error: null };\n                }\n                // no login attempt via callback url try to recover session from storage\n                yield this._recoverAndRefresh();\n                return { error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { error };\n                }\n                return {\n                    error: new AuthUnknownError('Unexpected error during initialization', error),\n                };\n            }\n            finally {\n                this._handleVisibilityChange();\n            }\n        });\n    }\n    /**\n     * Creates a new user.\n     * @returns A logged-in session if the server has \"autoconfirm\" ON\n     * @returns A user if the server has \"autoconfirm\" OFF\n     */\n    signUp(credentials) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                        body: {\n                            email,\n                            password,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/signup`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else {\n                    throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                const session = data.session;\n                const user = data.user;\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user with an email and password or phone and password.\n     */\n    signInWithPassword(credentials) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                let res;\n                if ('email' in credentials) {\n                    const { email, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            password,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else if ('phone' in credentials) {\n                    const { phone, password, options } = credentials;\n                    res = yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            password,\n                            data: (_b = options === null || options === void 0 ? void 0 : options.data) !== null && _b !== void 0 ? _b : {},\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        xform: _sessionResponse,\n                    });\n                }\n                else {\n                    throw new AuthInvalidCredentialsError('You must provide either an email or phone number and a password');\n                }\n                const { data, error } = res;\n                if (error || !data)\n                    return { data: { user: null, session: null }, error };\n                if (data.session) {\n                    yield this._saveSession(data.session);\n                    this._notifyAllSubscribers('SIGNED_IN', data.session);\n                }\n                return { data, error };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in an existing user via a third-party provider.\n     */\n    signInWithOAuth(credentials) {\n        var _a, _b, _c;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._removeSession();\n            return this._handleProviderSignIn(credentials.provider, {\n                redirectTo: (_a = credentials.options) === null || _a === void 0 ? void 0 : _a.redirectTo,\n                scopes: (_b = credentials.options) === null || _b === void 0 ? void 0 : _b.scopes,\n                queryParams: (_c = credentials.options) === null || _c === void 0 ? void 0 : _c.queryParams,\n            });\n        });\n    }\n    /**\n     * Log in a user using magiclink or a one-time password (OTP).\n     * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n     * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n     * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n     */\n    signInWithOtp(credentials) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                if ('email' in credentials) {\n                    const { email, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            email,\n                            data: (_a = options === null || options === void 0 ? void 0 : options.data) !== null && _a !== void 0 ? _a : {},\n                            create_user: (_b = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _b !== void 0 ? _b : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                        redirectTo: options === null || options === void 0 ? void 0 : options.emailRedirectTo,\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                if ('phone' in credentials) {\n                    const { phone, options } = credentials;\n                    const { error } = yield _request(this.fetch, 'POST', `${this.url}/otp`, {\n                        headers: this.headers,\n                        body: {\n                            phone,\n                            data: (_c = options === null || options === void 0 ? void 0 : options.data) !== null && _c !== void 0 ? _c : {},\n                            create_user: (_d = options === null || options === void 0 ? void 0 : options.shouldCreateUser) !== null && _d !== void 0 ? _d : true,\n                            gotrue_meta_security: { captcha_token: options === null || options === void 0 ? void 0 : options.captchaToken },\n                        },\n                    });\n                    return { data: { user: null, session: null }, error };\n                }\n                throw new AuthInvalidCredentialsError('You must provide either an email or phone number.');\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Log in a user given a User supplied OTP received via mobile.\n     */\n    verifyOtp(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._removeSession();\n                const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/verify`, {\n                    headers: this.headers,\n                    body: Object.assign(Object.assign({}, params), { gotrue_meta_security: { captchaToken: (_a = params.options) === null || _a === void 0 ? void 0 : _a.captchaToken } }),\n                    redirectTo: (_b = params.options) === null || _b === void 0 ? void 0 : _b.redirectTo,\n                    xform: _sessionResponse,\n                });\n                if (error) {\n                    throw error;\n                }\n                if (!data) {\n                    throw 'An error occurred on token verification.';\n                }\n                const session = data.session;\n                const user = data.user;\n                if (session === null || session === void 0 ? void 0 : session.access_token) {\n                    yield this._saveSession(session);\n                    this._notifyAllSubscribers('SIGNED_IN', session);\n                }\n                return { data: { user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns the session, refreshing it if necessary.\n     * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n     */\n    getSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // make sure we've read the session from the url if there is one\n            // save to just await, as long we make sure _initialize() never throws\n            yield this.initializePromise;\n            let currentSession = null;\n            if (this.persistSession) {\n                const maybeSession = yield getItemAsync(this.storage, this.storageKey);\n                if (maybeSession !== null) {\n                    if (this._isValidSession(maybeSession)) {\n                        currentSession = maybeSession;\n                    }\n                    else {\n                        yield this._removeSession();\n                    }\n                }\n            }\n            else {\n                currentSession = this.inMemorySession;\n            }\n            if (!currentSession) {\n                return { data: { session: null }, error: null };\n            }\n            const hasExpired = currentSession.expires_at\n                ? currentSession.expires_at <= Date.now() / 1000\n                : false;\n            if (!hasExpired) {\n                return { data: { session: currentSession }, error: null };\n            }\n            const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n            if (error) {\n                return { data: { session: null }, error };\n            }\n            return { data: { session }, error: null };\n        });\n    }\n    /**\n     * Gets the current user details if there is an existing session.\n     * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n     */\n    getUser(jwt) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!jwt) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    // Default to Authorization header if there is no existing session\n                    jwt = (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : undefined;\n                }\n                return yield _request(this.fetch, 'GET', `${this.url}/user`, {\n                    headers: this.headers,\n                    jwt: jwt,\n                    xform: _userResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Updates user data, if there is a logged in user.\n     */\n    updateUser(attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { data: sessionData, error: sessionError } = yield this.getSession();\n                if (sessionError) {\n                    throw sessionError;\n                }\n                if (!sessionData.session) {\n                    throw new AuthSessionMissingError();\n                }\n                const session = sessionData.session;\n                const { data, error: userError } = yield _request(this.fetch, 'PUT', `${this.url}/user`, {\n                    headers: this.headers,\n                    body: attributes,\n                    jwt: session.access_token,\n                    xform: _userResponse,\n                });\n                if (userError)\n                    throw userError;\n                session.user = data.user;\n                yield this._saveSession(session);\n                this._notifyAllSubscribers('USER_UPDATED', session);\n                return { data: { user: session.user }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Decodes a JWT (without performing any validation).\n     */\n    _decodeJWT(jwt) {\n        return decodeJWTPayload(jwt);\n    }\n    /**\n     * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n     * If the refresh token in the current session is invalid and the current session has expired, an error will be thrown.\n     * If the current session does not contain at expires_at field, setSession will use the exp claim defined in the access token.\n     * @param currentSession The current session that minimally contains an access token, refresh token and a user.\n     */\n    setSession(currentSession) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const timeNow = Date.now() / 1000;\n                let expiresAt = timeNow;\n                let hasExpired = true;\n                let session = null;\n                if (currentSession.access_token && currentSession.access_token.split('.')[1]) {\n                    const payload = this._decodeJWT(currentSession.access_token);\n                    if (payload.exp) {\n                        expiresAt = payload.exp;\n                        hasExpired = expiresAt <= timeNow;\n                    }\n                }\n                if (hasExpired) {\n                    if (!currentSession.refresh_token) {\n                        throw new AuthSessionMissingError();\n                    }\n                    const { data, error } = yield this._refreshAccessToken(currentSession.refresh_token);\n                    if (error) {\n                        return { data: { session: null, user: null }, error: error };\n                    }\n                    if (!data.session) {\n                        return { data: { session: null, user: null }, error: null };\n                    }\n                    session = data.session;\n                }\n                else {\n                    const { data, error } = yield this.getUser(currentSession.access_token);\n                    if (error) {\n                        throw error;\n                    }\n                    session = {\n                        access_token: currentSession.access_token,\n                        refresh_token: currentSession.refresh_token,\n                        user: data.user,\n                        token_type: 'bearer',\n                        expires_in: expiresAt - timeNow,\n                        expires_at: expiresAt,\n                    };\n                }\n                yield this._saveSession(session);\n                this._notifyAllSubscribers('TOKEN_REFRESHED', session);\n                return { data: { session, user: session.user }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Returns a new session, regardless of expiry status.\n     * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n     * If the current session's refresh token is invalid, an error will be thrown.\n     * @param currentSession The current session. If passed in, it must contain a refresh token.\n     */\n    refreshSession(currentSession) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!currentSession) {\n                    const { data, error } = yield this.getSession();\n                    if (error) {\n                        throw error;\n                    }\n                    currentSession = (_a = data.session) !== null && _a !== void 0 ? _a : undefined;\n                }\n                if (!(currentSession === null || currentSession === void 0 ? void 0 : currentSession.refresh_token)) {\n                    throw new AuthSessionMissingError();\n                }\n                const { session, error } = yield this._callRefreshToken(currentSession.refresh_token);\n                if (error) {\n                    return { data: { user: null, session: null }, error: error };\n                }\n                if (!session) {\n                    return { data: { user: null, session: null }, error: null };\n                }\n                return { data: { user: session.user, session }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { user: null, session: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Gets the session data from a URL string\n     */\n    _getSessionFromUrl() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (!isBrowser())\n                    throw new AuthImplicitGrantRedirectError('No browser detected.');\n                if (!this._isImplicitGrantFlow()) {\n                    throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.');\n                }\n                const error_description = getParameterByName('error_description');\n                if (error_description) {\n                    const error_code = getParameterByName('error_code');\n                    if (!error_code)\n                        throw new AuthImplicitGrantRedirectError('No error_code detected.');\n                    const error = getParameterByName('error');\n                    if (!error)\n                        throw new AuthImplicitGrantRedirectError('No error detected.');\n                    throw new AuthImplicitGrantRedirectError(error_description, { error, code: error_code });\n                }\n                const provider_token = getParameterByName('provider_token');\n                const provider_refresh_token = getParameterByName('provider_refresh_token');\n                const access_token = getParameterByName('access_token');\n                if (!access_token)\n                    throw new AuthImplicitGrantRedirectError('No access_token detected.');\n                const expires_in = getParameterByName('expires_in');\n                if (!expires_in)\n                    throw new AuthImplicitGrantRedirectError('No expires_in detected.');\n                const refresh_token = getParameterByName('refresh_token');\n                if (!refresh_token)\n                    throw new AuthImplicitGrantRedirectError('No refresh_token detected.');\n                const token_type = getParameterByName('token_type');\n                if (!token_type)\n                    throw new AuthImplicitGrantRedirectError('No token_type detected.');\n                const timeNow = Math.round(Date.now() / 1000);\n                const expires_at = timeNow + parseInt(expires_in);\n                const { data, error } = yield this.getUser(access_token);\n                if (error)\n                    throw error;\n                const user = data.user;\n                const session = {\n                    provider_token,\n                    provider_refresh_token,\n                    access_token,\n                    expires_in: parseInt(expires_in),\n                    expires_at,\n                    refresh_token,\n                    token_type,\n                    user,\n                };\n                const redirectType = getParameterByName('type');\n                // Remove tokens from URL\n                window.location.hash = '';\n                return { data: { session, redirectType }, error: null };\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, redirectType: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n     */\n    _isImplicitGrantFlow() {\n        return (isBrowser() &&\n            (Boolean(getParameterByName('access_token')) ||\n                Boolean(getParameterByName('error_description'))));\n    }\n    /**\n     * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n     * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n     *\n     * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n     * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n     */\n    signOut() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data, error: sessionError } = yield this.getSession();\n            if (sessionError) {\n                return { error: sessionError };\n            }\n            const accessToken = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token;\n            if (accessToken) {\n                const { error } = yield this.admin.signOut(accessToken);\n                if (error)\n                    return { error };\n            }\n            yield this._removeSession();\n            this._notifyAllSubscribers('SIGNED_OUT', null);\n            return { error: null };\n        });\n    }\n    /**\n     * Receive a notification every time an auth event happens.\n     * @param callback A callback function to be invoked when an auth event happens.\n     */\n    onAuthStateChange(callback) {\n        const id = uuid();\n        const subscription = {\n            id,\n            callback,\n            unsubscribe: () => {\n                this.stateChangeEmitters.delete(id);\n            },\n        };\n        this.stateChangeEmitters.set(id, subscription);\n        return { data: { subscription } };\n    }\n    /**\n     * Sends a password reset request to an email address.\n     * @param email The email address of the user.\n     * @param options.redirectTo The URL to send the user to after they click the password reset link.\n     * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n     */\n    resetPasswordForEmail(email, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/recover`, {\n                    body: { email, gotrue_meta_security: { captcha_token: options.captchaToken } },\n                    headers: this.headers,\n                    redirectTo: options.redirectTo,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: null, error };\n                }\n                throw error;\n            }\n        });\n    }\n    /**\n     * Generates a new JWT.\n     * @param refreshToken A valid refresh token that was returned on login.\n     */\n    _refreshAccessToken(refreshToken) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                return yield _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n                    body: { refresh_token: refreshToken },\n                    headers: this.headers,\n                    xform: _sessionResponse,\n                });\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    return { data: { session: null, user: null }, error };\n                }\n                throw error;\n            }\n        });\n    }\n    _isValidSession(maybeSession) {\n        const isValidSession = typeof maybeSession === 'object' &&\n            maybeSession !== null &&\n            'access_token' in maybeSession &&\n            'refresh_token' in maybeSession &&\n            'expires_at' in maybeSession;\n        return isValidSession;\n    }\n    _handleProviderSignIn(provider, options = {}) {\n        const url = this._getUrlForProvider(provider, {\n            redirectTo: options.redirectTo,\n            scopes: options.scopes,\n            queryParams: options.queryParams,\n        });\n        // try to open on the browser\n        if (isBrowser()) {\n            window.location.href = url;\n        }\n        return { data: { provider, url }, error: null };\n    }\n    /**\n     * Recovers the session from LocalStorage and refreshes\n     * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n     */\n    _recoverAndRefresh() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const currentSession = yield getItemAsync(this.storage, this.storageKey);\n                if (!this._isValidSession(currentSession)) {\n                    if (currentSession !== null) {\n                        yield this._removeSession();\n                    }\n                    return;\n                }\n                const timeNow = Math.round(Date.now() / 1000);\n                if (((_a = currentSession.expires_at) !== null && _a !== void 0 ? _a : Infinity) < timeNow + EXPIRY_MARGIN) {\n                    if (this.autoRefreshToken && currentSession.refresh_token) {\n                        this.networkRetries++;\n                        const { error } = yield this._callRefreshToken(currentSession.refresh_token);\n                        if (error) {\n                            console.log(error.message);\n                            if (error instanceof AuthRetryableFetchError &&\n                                this.networkRetries < NETWORK_FAILURE.MAX_RETRIES) {\n                                if (this.refreshTokenTimer)\n                                    clearTimeout(this.refreshTokenTimer);\n                                this.refreshTokenTimer = setTimeout(() => this._recoverAndRefresh(), Math.pow(NETWORK_FAILURE.RETRY_INTERVAL, this.networkRetries) * 100 // exponential backoff\n                                );\n                                return;\n                            }\n                            yield this._removeSession();\n                        }\n                        this.networkRetries = 0;\n                    }\n                    else {\n                        yield this._removeSession();\n                    }\n                }\n                else {\n                    if (this.persistSession) {\n                        yield this._saveSession(currentSession);\n                    }\n                    this._notifyAllSubscribers('SIGNED_IN', currentSession);\n                }\n            }\n            catch (err) {\n                console.error(err);\n                return;\n            }\n        });\n    }\n    _callRefreshToken(refreshToken) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            // refreshing is already in progress\n            if (this.refreshingDeferred) {\n                return this.refreshingDeferred.promise;\n            }\n            try {\n                this.refreshingDeferred = new Deferred();\n                if (!refreshToken) {\n                    throw new AuthSessionMissingError();\n                }\n                const { data, error } = yield this._refreshAccessToken(refreshToken);\n                if (error)\n                    throw error;\n                if (!data.session)\n                    throw new AuthSessionMissingError();\n                yield this._saveSession(data.session);\n                this._notifyAllSubscribers('TOKEN_REFRESHED', data.session);\n                const result = { session: data.session, error: null };\n                this.refreshingDeferred.resolve(result);\n                return result;\n            }\n            catch (error) {\n                if (isAuthError(error)) {\n                    const result = { session: null, error };\n                    (_a = this.refreshingDeferred) === null || _a === void 0 ? void 0 : _a.resolve(result);\n                    return result;\n                }\n                (_b = this.refreshingDeferred) === null || _b === void 0 ? void 0 : _b.reject(error);\n                throw error;\n            }\n            finally {\n                this.refreshingDeferred = null;\n            }\n        });\n    }\n    _notifyAllSubscribers(event, session) {\n        this.stateChangeEmitters.forEach((x) => x.callback(event, session));\n    }\n    /**\n     * set currentSession and currentUser\n     * process to _startAutoRefreshToken if possible\n     */\n    _saveSession(session) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.persistSession) {\n                this.inMemorySession = session;\n            }\n            const expiresAt = session.expires_at;\n            if (expiresAt) {\n                const timeNow = Math.round(Date.now() / 1000);\n                const expiresIn = expiresAt - timeNow;\n                const refreshDurationBeforeExpires = expiresIn > EXPIRY_MARGIN ? EXPIRY_MARGIN : 0.5;\n                this._startAutoRefreshToken((expiresIn - refreshDurationBeforeExpires) * 1000);\n            }\n            if (this.persistSession && session.expires_at) {\n                yield this._persistSession(session);\n            }\n        });\n    }\n    _persistSession(currentSession) {\n        return setItemAsync(this.storage, this.storageKey, currentSession);\n    }\n    _removeSession() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.persistSession) {\n                yield removeItemAsync(this.storage, this.storageKey);\n            }\n            else {\n                this.inMemorySession = null;\n            }\n            if (this.refreshTokenTimer) {\n                clearTimeout(this.refreshTokenTimer);\n            }\n        });\n    }\n    /**\n     * Clear and re-create refresh token timer\n     * @param value time intervals in milliseconds.\n     * @param session The current session.\n     */\n    _startAutoRefreshToken(value) {\n        if (this.refreshTokenTimer)\n            clearTimeout(this.refreshTokenTimer);\n        if (value <= 0 || !this.autoRefreshToken)\n            return;\n        this.refreshTokenTimer = setTimeout(() => __awaiter(this, void 0, void 0, function* () {\n            this.networkRetries++;\n            const { data: { session }, error: sessionError, } = yield this.getSession();\n            if (!sessionError && session) {\n                const { error } = yield this._callRefreshToken(session.refresh_token);\n                if (!error)\n                    this.networkRetries = 0;\n                if (error instanceof AuthRetryableFetchError &&\n                    this.networkRetries < NETWORK_FAILURE.MAX_RETRIES)\n                    this._startAutoRefreshToken(Math.pow(NETWORK_FAILURE.RETRY_INTERVAL, this.networkRetries) * 100); // exponential backoff\n            }\n        }), value);\n        if (typeof this.refreshTokenTimer.unref === 'function')\n            this.refreshTokenTimer.unref();\n    }\n    _handleVisibilityChange() {\n        if (!isBrowser() || !(window === null || window === void 0 ? void 0 : window.addEventListener)) {\n            return false;\n        }\n        try {\n            window === null || window === void 0 ? void 0 : window.addEventListener('visibilitychange', () => __awaiter(this, void 0, void 0, function* () {\n                if (document.visibilityState === 'visible') {\n                    yield this.initializePromise;\n                    yield this._recoverAndRefresh();\n                }\n            }));\n        }\n        catch (error) {\n            console.error('_handleVisibilityChange', error);\n        }\n    }\n    /**\n     * Generates the relevant login URL for a third-party provider.\n     * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n     * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n     * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n     */\n    _getUrlForProvider(provider, options) {\n        const urlParams = [`provider=${encodeURIComponent(provider)}`];\n        if (options === null || options === void 0 ? void 0 : options.redirectTo) {\n            urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.scopes) {\n            urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`);\n        }\n        if (options === null || options === void 0 ? void 0 : options.queryParams) {\n            const query = new URLSearchParams(options.queryParams);\n            urlParams.push(query.toString());\n        }\n        return `${this.url}/authorize?${urlParams.join('&')}`;\n    }\n    _unenroll(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: sessionData, error: sessionError } = yield this.getSession();\n            if (sessionError) {\n                return { data: null, error: sessionError };\n            }\n            return yield _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n                headers: this.headers,\n                jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n            });\n        });\n    }\n    /**\n     * Deletes a registered factor from GoTrue\n     * @param friendlyName Human readable name assigned to a device\n     * @param factorType device which we're validating against. Can only be TOTP for now.\n     * @param issuer domain which the user is enrolling with\n     */\n    _enroll(params) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: sessionData, error: sessionError } = yield this.getSession();\n            if (sessionError) {\n                return { data: null, error: sessionError };\n            }\n            const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/factors`, {\n                body: {\n                    friendly_name: params.friendlyName,\n                    factor_type: params.factorType,\n                    issuer: params.issuer,\n                },\n                headers: this.headers,\n                jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n            });\n            if (error) {\n                return { data: null, error };\n            }\n            if ((_b = data === null || data === void 0 ? void 0 : data.totp) === null || _b === void 0 ? void 0 : _b.qr_code) {\n                data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`;\n            }\n            return { data, error: null };\n        });\n    }\n    /**\n     * Validates a device as part of the enrollment step.\n     * @param factorID System assigned identifier for authenticator device as returned by enroll\n     * @param code Code Generated by an authenticator device\n     */\n    _verify(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: sessionData, error: sessionError } = yield this.getSession();\n            if (sessionError) {\n                return { data: null, error: sessionError };\n            }\n            const { data, error } = yield _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/verify`, {\n                body: { code: params.code, challenge_id: params.challengeId },\n                headers: this.headers,\n                jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n            });\n            if (error) {\n                return { data: null, error };\n            }\n            yield this._saveSession(Object.assign({ expires_at: Math.round(Date.now() / 1000) + data.expires_in }, data));\n            this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data);\n            return { data, error };\n        });\n    }\n    /**\n     * Creates a challenge which a user can verify against\n     * @param factorID System assigned identifier for authenticator device as returned by enroll\n     */\n    _challenge(params) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: sessionData, error: sessionError } = yield this.getSession();\n            if (sessionError) {\n                return { data: null, error: sessionError };\n            }\n            return yield _request(this.fetch, 'POST', `${this.url}/factors/${params.factorId}/challenge`, {\n                headers: this.headers,\n                jwt: (_a = sessionData === null || sessionData === void 0 ? void 0 : sessionData.session) === null || _a === void 0 ? void 0 : _a.access_token,\n            });\n        });\n    }\n    _challengeAndVerify(params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: challengeData, error: challengeError } = yield this._challenge({\n                factorId: params.factorId,\n            });\n            if (challengeError) {\n                return { data: null, error: challengeError };\n            }\n            return yield this._verify({\n                factorId: params.factorId,\n                challengeId: challengeData.id,\n                code: params.code,\n            });\n        });\n    }\n    /**\n     * Displays all devices for a given user\n     */\n    _listFactors() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { user }, error: userError, } = yield this.getUser();\n            if (userError) {\n                return { data: null, error: userError };\n            }\n            const factors = (user === null || user === void 0 ? void 0 : user.factors) || [];\n            const totp = factors.filter((factor) => factor.factor_type === 'totp' && factor.status === 'verified');\n            return {\n                data: {\n                    all: factors,\n                    totp,\n                },\n                error: null,\n            };\n        });\n    }\n    _getAuthenticatorAssuranceLevel() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data: { session }, error: sessionError, } = yield this.getSession();\n            if (sessionError) {\n                return { data: null, error: sessionError };\n            }\n            if (!session) {\n                return {\n                    data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n                    error: null,\n                };\n            }\n            const payload = this._decodeJWT(session.access_token);\n            let currentLevel = null;\n            if (payload.aal) {\n                currentLevel = payload.aal;\n            }\n            let nextLevel = currentLevel;\n            const verifiedFactors = (_b = (_a = session.user.factors) === null || _a === void 0 ? void 0 : _a.filter((factor) => factor.status === 'verified')) !== null && _b !== void 0 ? _b : [];\n            if (verifiedFactors.length > 0) {\n                nextLevel = 'aal2';\n            }\n            const currentAuthenticationMethods = payload.amr || [];\n            return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null };\n        });\n    }\n}\n//# sourceMappingURL=GoTrueClient.js.map","import { GoTrueClient } from '@supabase/gotrue-js';\nexport class SupabaseAuthClient extends GoTrueClient {\n    constructor(options) {\n        super(options);\n    }\n}\n//# sourceMappingURL=SupabaseAuthClient.js.map","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { FunctionsClient } from '@supabase/functions-js';\nimport { PostgrestClient, } from '@supabase/postgrest-js';\nimport { RealtimeClient, } from '@supabase/realtime-js';\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js';\nimport { DEFAULT_HEADERS } from './lib/constants';\nimport { fetchWithAuth } from './lib/fetch';\nimport { stripTrailingSlash, applySettingDefaults } from './lib/helpers';\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient';\nconst DEFAULT_GLOBAL_OPTIONS = {\n    headers: DEFAULT_HEADERS,\n};\nconst DEFAULT_DB_OPTIONS = {\n    schema: 'public',\n};\nconst DEFAULT_AUTH_OPTIONS = {\n    autoRefreshToken: true,\n    persistSession: true,\n    detectSessionInUrl: true,\n};\nconst DEFAULT_REALTIME_OPTIONS = {};\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient {\n    /**\n     * Create a new client for use in the browser.\n     * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n     * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n     * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n     * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n     * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n     * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n     * @param options.realtime Options passed along to realtime-js constructor.\n     * @param options.global.fetch A custom fetch implementation.\n     * @param options.global.headers Any additional headers to send with each network request.\n     */\n    constructor(supabaseUrl, supabaseKey, options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        this.supabaseUrl = supabaseUrl;\n        this.supabaseKey = supabaseKey;\n        if (!supabaseUrl)\n            throw new Error('supabaseUrl is required.');\n        if (!supabaseKey)\n            throw new Error('supabaseKey is required.');\n        const _supabaseUrl = stripTrailingSlash(supabaseUrl);\n        this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, 'ws');\n        this.authUrl = `${_supabaseUrl}/auth/v1`;\n        this.storageUrl = `${_supabaseUrl}/storage/v1`;\n        const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/);\n        if (isPlatform) {\n            const urlParts = _supabaseUrl.split('.');\n            this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`;\n        }\n        else {\n            this.functionsUrl = `${_supabaseUrl}/functions/v1`;\n        }\n        // default storage key uses the supabase project ref as a namespace\n        const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split('.')[0]}-auth-token`;\n        const DEFAULTS = {\n            db: DEFAULT_DB_OPTIONS,\n            realtime: DEFAULT_REALTIME_OPTIONS,\n            auth: Object.assign(Object.assign({}, DEFAULT_AUTH_OPTIONS), { storageKey: defaultStorageKey }),\n            global: DEFAULT_GLOBAL_OPTIONS,\n        };\n        const settings = applySettingDefaults(options !== null && options !== void 0 ? options : {}, DEFAULTS);\n        this.storageKey = (_b = (_a = settings.auth) === null || _a === void 0 ? void 0 : _a.storageKey) !== null && _b !== void 0 ? _b : '';\n        this.headers = (_d = (_c = settings.global) === null || _c === void 0 ? void 0 : _c.headers) !== null && _d !== void 0 ? _d : {};\n        this.auth = this._initSupabaseAuthClient((_e = settings.auth) !== null && _e !== void 0 ? _e : {}, this.headers, (_f = settings.global) === null || _f === void 0 ? void 0 : _f.fetch);\n        this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), (_g = settings.global) === null || _g === void 0 ? void 0 : _g.fetch);\n        this.realtime = this._initRealtimeClient(Object.assign({ headers: this.headers }, settings.realtime));\n        this.rest = new PostgrestClient(`${_supabaseUrl}/rest/v1`, {\n            headers: this.headers,\n            schema: (_h = settings.db) === null || _h === void 0 ? void 0 : _h.schema,\n            fetch: this.fetch,\n        });\n        this._listenForAuthEvents();\n    }\n    /**\n     * Supabase Functions allows you to deploy and invoke edge functions.\n     */\n    get functions() {\n        return new FunctionsClient(this.functionsUrl, {\n            headers: this.headers,\n            customFetch: this.fetch,\n        });\n    }\n    /**\n     * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n     */\n    get storage() {\n        return new SupabaseStorageClient(this.storageUrl, this.headers, this.fetch);\n    }\n    from(relation) {\n        return this.rest.from(relation);\n    }\n    /**\n     * Perform a function call.\n     *\n     * @param fn  The function name to call.\n     * @param args  The parameters to pass to the function call.\n     * @param options.head   When set to true, no data will be returned.\n     * @param options.count  Count algorithm to use to count rows in a table.\n     *\n     */\n    rpc(fn, args = {}, options) {\n        return this.rest.rpc(fn, args, options);\n    }\n    /**\n     * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n     *\n     * @param {string} name - The name of the Realtime channel.\n     * @param {Object} opts - The options to pass to the Realtime channel.\n     *\n     */\n    channel(name, opts = { config: {} }) {\n        return this.realtime.channel(name, opts);\n    }\n    /**\n     * Returns all Realtime channels.\n     */\n    getChannels() {\n        return this.realtime.getChannels();\n    }\n    /**\n     * Unsubscribes and removes Realtime channel from Realtime client.\n     *\n     * @param {RealtimeChannel} channel - The name of the Realtime channel.\n     *\n     */\n    removeChannel(channel) {\n        return this.realtime.removeChannel(channel);\n    }\n    /**\n     * Unsubscribes and removes all Realtime channels from Realtime client.\n     */\n    removeAllChannels() {\n        return this.realtime.removeAllChannels();\n    }\n    _getAccessToken() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            const { data } = yield this.auth.getSession();\n            return (_b = (_a = data.session) === null || _a === void 0 ? void 0 : _a.access_token) !== null && _b !== void 0 ? _b : null;\n        });\n    }\n    _initSupabaseAuthClient({ autoRefreshToken, persistSession, detectSessionInUrl, storage, storageKey, }, headers, fetch) {\n        const authHeaders = {\n            Authorization: `Bearer ${this.supabaseKey}`,\n            apikey: `${this.supabaseKey}`,\n        };\n        return new SupabaseAuthClient({\n            url: this.authUrl,\n            headers: Object.assign(Object.assign({}, authHeaders), headers),\n            storageKey: storageKey,\n            autoRefreshToken,\n            persistSession,\n            detectSessionInUrl,\n            storage,\n            fetch,\n        });\n    }\n    _initRealtimeClient(options) {\n        return new RealtimeClient(this.realtimeUrl, Object.assign(Object.assign({}, options), { params: Object.assign({ apikey: this.supabaseKey }, options === null || options === void 0 ? void 0 : options.params) }));\n    }\n    _listenForAuthEvents() {\n        let data = this.auth.onAuthStateChange((event, session) => {\n            this._handleTokenChanged(event, session === null || session === void 0 ? void 0 : session.access_token, 'CLIENT');\n        });\n        return data;\n    }\n    _handleTokenChanged(event, token, source) {\n        if ((event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n            this.changedAccessToken !== token) {\n            // Token has changed\n            this.realtime.setAuth(token !== null && token !== void 0 ? token : null);\n            this.changedAccessToken = token;\n        }\n        else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n            // Token is removed\n            this.realtime.setAuth(this.supabaseKey);\n            if (source == 'STORAGE')\n                this.auth.signOut();\n        }\n    }\n}\n//# sourceMappingURL=SupabaseClient.js.map","import SupabaseClient from './SupabaseClient';\nexport * from '@supabase/gotrue-js';\nexport { FunctionsHttpError, FunctionsFetchError, FunctionsRelayError, FunctionsError, } from '@supabase/functions-js';\nexport * from '@supabase/realtime-js';\nexport { default as SupabaseClient } from './SupabaseClient';\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = (supabaseUrl, supabaseKey, options) => {\n    return new SupabaseClient(supabaseUrl, supabaseKey, options);\n};\n//# sourceMappingURL=index.js.map","import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = \"https://iwmevhczazoydtduamuc.supabase.co\"\r\nconst supabaseAnonKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Iml3bWV2aGN6YXpveWR0ZHVhbXVjIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NjMzOTc3MzYsImV4cCI6MTk3ODk3MzczNn0.AR-W-rg1fEymmsom1hsO1XbdKJoxCkTVTPxKeKihrx0\"\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)","<template>\r\n    <!-- <v-card class=\"d-flex justify-center mb-6 rounded-xl\"> -->\r\n    <!-- <v-card class=\"d-flex justify-center mb-6 rounded-xl\"> -->\r\n\r\n    <v-container class=\"messageCard pa-0 pink lighten-4\">\r\n        <v-container class=\"py-0\">\r\n            <v-row class=\"justify-center\">\r\n                <v-col style=\"flex-grow: 0\">\r\n                    <v-img class=\"customAvatar\"\r\n                        src=\"https://iwmevhczazoydtduamuc.supabase.co/storage/v1/object/public/avatars/rick%20avatar.png\">\r\n                    </v-img>\r\n                </v-col>\r\n            </v-row>\r\n            <v-row class=\"justify-center ma-0 dense\">\r\n                <p class=\"userName\">{{ $route.params.userName }}</p>\r\n            </v-row>\r\n            <v-row class=\"ma-0 pa-0\">\r\n                <p class=\"messageLabel dense\">Send me anonymous messages</p>\r\n            </v-row>\r\n            <v-container fluid pa-0 class=\"messagePanel\">\r\n                <v-row class=\"ma-0 pa-0\">\r\n                    <!-- <v-text-field v-model=\"message\" style=\"max-width=100\" label=\"Message\"\r\n                        placeholder=\"Type your message here :)\" regular>\r\n                    </v-text-field> -->\r\n                    <v-textarea\r\n                        no-resize flat solo\r\n                        v-model=\"message\"\r\n                        name=\"input-2-1\"\r\n                        background-color=\"transparent\"\r\n                        placeholder=\"Your message here\"\r\n                    ></v-textarea>\r\n                </v-row>\r\n            </v-container>\r\n            <v-row class=\"justify-center my-0 pa-0\">\r\n                <v-btn\r\n                    depressed\r\n                    elevation=\"0\"\r\n                    class=\"sendButton\"\r\n                    color=\"#FCE4EC\"\r\n                    @click=\"sendMessage\"\r\n                    :disabled=\"loading\"\r\n                    :value=\"loading ? 'Sending' : 'Send'\">\r\n                        Send\r\n                    </v-btn>\r\n            </v-row>\r\n        </v-container>\r\n    </v-container>\r\n</template>\r\n\r\n<style scoped>\r\n.messageCard {\r\n    background-color: pink lighten-4;\r\n    color: black;\r\n    border-radius: 20px;\r\n}\r\n\r\n.messagePanel {\r\n    background-color: #FCE4EC;\r\n    border-radius: 10px;\r\n    width: 100%;\r\n    padding: 10px;\r\n}\r\n\r\n.customAvatar {\r\n    border-radius: 50%;\r\n    width: 70px;\r\n    height: 70px;\r\n}\r\n\r\n.userName {\r\n    font-weight: bold;\r\n}\r\n\r\n.messageLabel {\r\n    width: 100%;\r\n    font-weight: bold;\r\n    text-align: center;\r\n}\r\n\r\n.sendButton {\r\n    font-weight: bold;\r\n    text-transform: unset !important;\r\n    border-radius: 10px !important;\r\n    margin: 10px;\r\n}\r\n\r\n</style>\r\n\r\n<script>\r\nexport default {\r\n    computed: {\r\n        currentRouteName() {\r\n            return this.$route.params.userName;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { supabase } from '../supabase'\r\n\r\nconst loading = ref(false)\r\nconst message = ref('')\r\n\r\nconst sendMessage = async () => {\r\n    if (message.value == '') {\r\n        alert(\"Please add a message\")\r\n    } else {\r\n        try {\r\n            loading.value = true;\r\n            const { error } = await supabase.from(\"messages\").insert({\r\n                'username': 'delts',\r\n                'message': message.value,\r\n            })\r\n            if (error) throw error\r\n            alert('Message sent')\r\n            message.value = ''\r\n        } catch (error) {\r\n            if (error instanceof Error) {\r\n                alert(error.message)\r\n            }\r\n        } finally {\r\n            loading.value = false;\r\n        }\r\n    }\r\n}\r\n\r\n</script>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MessageCard.vue?vue&type=script&setup=true&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MessageCard.vue?vue&type=script&setup=true&lang=js&\"","import { render, staticRenderFns } from \"./MessageCard.vue?vue&type=template&id=925bf162&scoped=true&\"\nimport script from \"./MessageCard.vue?vue&type=script&setup=true&lang=js&\"\nexport * from \"./MessageCard.vue?vue&type=script&setup=true&lang=js&\"\nimport style0 from \"./MessageCard.vue?vue&type=style&index=0&id=925bf162&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"925bf162\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n    <!-- <div class=\"d-flex pa-2 justify-center align-self-center\"> -->\r\n    <div class=\"action\">\r\n        <v-row align=\"center\" justify=\"center\">\r\n            <v-col>\r\n                <v-container>\r\n                    <!-- <v-progress-circular v-if=\"loading = true\"\r\n                        :size=\"70\"\r\n                        :width=\"7\"\r\n                        color=\"purple\"\r\n                        indeterminate/> -->\r\n                    <MessageCard/>\r\n                </v-container>\r\n            </v-col>\r\n        </v-row>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport {ref} from 'vue'\r\nimport MessageCard from '../components/MessageCard.vue'\r\nimport { supabase } from '../supabase'\r\nimport router from '../router/index'\r\n\r\nconst loading = ref(false)\r\n\r\nconst verifyUser = async (userName) => {\r\n    try {\r\n        loading.value = true\r\n        const { data } = await supabase.from(\"users\").select('username, avatar').eq('username', userName)\r\n        if (data == null || data.length == 0) {\r\n            router.push({name: 'notFound'})\r\n        } else {\r\n            loading.value = false\r\n            router.replace(`/${userName}`).catch(()=>{});\r\n        }\r\n    } catch (error) {\r\n        alert(error)\r\n    } finally {\r\n        console.log('asdasd')\r\n        loading.value = false\r\n    }\r\n}\r\n\r\nexport default {\r\n    components: {\r\n        MessageCard\r\n    },\r\n    computed: {\r\n        currentRouteName() {\r\n            return this.$route.params.userName;\r\n        }\r\n    },\r\n    async beforeMount() {\r\n        await verifyUser(this.currentRouteName)\r\n    },\r\n    // async beforeRouteUpdate(to, from) {\r\n    //     console.log(from.fullPath)\r\n    //     console.log(to.params.userName)\r\n    //     await verifyUser('delts')\r\n    // }\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.action {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100vh;\r\n    margin: auto;\r\n    max-width: 500px;\r\n}\r\n</style>\r\n","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MessageScreen.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./MessageScreen.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MessageScreen.vue?vue&type=template&id=218023a8&scoped=true&\"\nimport script from \"./MessageScreen.vue?vue&type=script&lang=js&\"\nexport * from \"./MessageScreen.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MessageScreen.vue?vue&type=style&index=0&id=218023a8&prod&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"218023a8\",\n  null\n  \n)\n\nexport default component.exports","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n"],"names":["breakpoints","breakpointProps","reduce","props","val","type","Boolean","String","Number","default","offsetProps","upperFirst","orderProps","propMap","col","Object","keys","offset","order","breakpointClass","prop","className","breakpoint","replace","toLowerCase","cache","Map","Vue","name","functional","cols","alignSelf","validator","str","includes","tag","render","h","data","children","parent","cacheKey","classList","get","forEach","value","push","hasColClasses","some","startsWith","set","mergeData","class","staticClass","_c","attrs","staticRenderFns","mixins","Measurable","extend","aspectRatio","contentClass","computed","computedAspectRatio","this","aspectStyle","paddingBottom","undefined","__cachedSizer","$createElement","style","methods","genContent","getSlot","measurableStyles","on","$listeners","hasIntersect","window","VResponsive","Themeable","directives","intersect","alt","contain","eager","gradient","lazySrc","options","root","rootMargin","threshold","position","sizes","src","srcset","transition","currentSrc","image","isLoading","calculatedAspectRatio","naturalWidth","hasError","normalisedSrc","aspect","__cachedImage","backgroundImage","join","backgroundPosition","key","mode","watch","loadImage","init","mounted","entries","observer","isIntersecting","lazyImg","Image","pollForSize","onLoad","getSrc","$emit","endsWith","naturalHeight","onError","onload","decode","catch","err","consoleWarn","message","then","onerror","img","timeout","poll","complete","setTimeout","content","_b","width","__genPlaceholder","slot","placeholder","appear","node","role","themeClasses","modifiers","once","handler","baseMixins","VTextField","autoGrow","noResize","rowHeight","v","isNaN","parseFloat","rows","parseInt","classes","noResizeHandle","$nextTick","calculateInputHeight","$refs","input","_a","removeProperty","lazyValue","height","scrollHeight","minHeight","Math","max","genInput","onInput","e","onKeyDown","isFocused","keyCode","stopPropagation","staticStyle","_v","model","_setup","callback","expression","_vm","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","rejected","result","done","apply","resolveFetch","customFetch","_fetch","fetch","args","FunctionsError","Error","constructor","context","super","FunctionsFetchError","FunctionsRelayError","FunctionsHttpError","FunctionsClient","url","headers","setAuth","token","Authorization","invoke","functionName","invokeOptions","body","functionArgs","_headers","prototype","hasOwnProperty","call","Blob","ArrayBuffer","FormData","JSON","stringify","response","method","assign","fetchError","isRelayError","ok","responseType","split","trim","json","blob","formData","text","error","PostgrestBuilder","builder","shouldThrowOnError","schema","signal","allowEmpty","throwOnError","onfulfilled","onrejected","res","toString","count","status","statusText","parse","countHeader","match","contentRange","length","_d","details","postgrestResponse","hint","code","PostgrestTransformBuilder","select","columns","quoted","cleanedColumns","map","c","test","searchParams","column","ascending","nullsFirst","foreignTable","existingOrder","limit","range","from","to","keyOffset","keyLimit","abortSignal","single","maybeSingle","csv","geojson","explain","analyze","verbose","settings","buffers","wal","format","filter","forMediatype","rollback","returns","PostgrestFilterBuilder","eq","append","neq","gt","gte","lt","lte","like","pattern","ilike","is","in","values","cleanedValues","s","RegExp","contains","Array","isArray","containedBy","rangeGt","rangeGte","rangeLt","rangeLte","rangeAdjacent","overlaps","textSearch","query","config","typePart","configPart","not","operator","or","filters","PostgrestQueryBuilder","head","insert","prefersHeaders","unshift","acc","x","concat","uniqueColumns","Set","upsert","onConflict","ignoreDuplicates","update","delete","version","DEFAULT_HEADERS","PostgrestClient","relation","URL","rpc","fn","VSN","DEFAULT_TIMEOUT","WS_CLOSE_NORMAL","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","REALTIME_PRESENCE_LISTEN_EVENTS","PostgresTypes","Timer","timerCalc","timer","tries","reset","clearTimeout","scheduleTimeout","Serializer","HEADER_LENGTH","rawPayload","_binaryDecode","buffer","view","DataView","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","topic","slice","event","byteLength","ref","payload","Push","channel","sent","timeoutTimer","receivedResp","recHooks","refEvent","rateLimited","resend","_cancelRefEvent","send","_hasReceived","startTimeout","socket","join_ref","_joinRef","updatePayload","receive","_makeRef","_replyEventName","_cancelTimeout","_matchReceive","_on","trigger","_trigger","destroy","_off","RealtimePresence","opts","state","pendingDiffs","joinRef","caller","onJoin","onLeave","onSync","events","diff","newState","syncState","syncDiff","inPendingSyncState","currentPresences","newPresences","leftPresences","static","currentState","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresenceRefs","m","presence_ref","curPresenceRefs","joinedPresences","indexOf","joinedPresenceRefs","curPresences","presenceRefsToRemove","obj","func","getOwnPropertyNames","metas","presence","convertChangeData","record","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","noop","charAt","dataType","toArray","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","console","log","lastIdx","closeBrace","openBrace","arr","valTrim","_","REALTIME_POSTGRES_CHANGES_LISTEN_EVENT","REALTIME_LISTEN_TYPES","REALTIME_SUBSCRIBE_STATES","RealtimeChannel","params","bindings","closed","joinedOnce","pushBuffer","broadcast","ack","self","joinPush","rejoinTimer","_rejoinUntilConnected","reconnectAfterMs","joined","pushEvent","_onClose","_remove","_onError","reason","_isLeaving","_isClosed","errored","_isJoining","reply","subscribe","accessTokenPayload","postgres_changes","r","accessToken","access_token","updateJoinPayload","_rejoin","serverPostgresFilters","clientPostgresBindings","bindingsLen","newPostgresBindings","i","clientPostgresBinding","table","serverPostgresFilter","unsubscribe","id","presenceState","track","untrack","_push","leaving","onClose","close","leavePush","leave","_canPush","_onMessage","_event","_ref","_isMember","typeLower","toLocaleLowerCase","handledPayload","bind","_e","_f","bindId","bindEvent","ids","postgresChanges","commit_timestamp","errors","enrichedPayload","eventType","new","old","_getPayloadRecords","_isJoined","joining","binding","isEqual","obj1","obj2","k","isConnected","_leaveOpenTopic","records","old_record","RealtimeClient","endPoint","channels","transport","w3cwebsocket","heartbeatIntervalMs","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","open","eventsPerSecondLimitMs","inThrottle","websocket","eventsPerSecond","floor","encode","reconnectTimer","disconnect","connect","_endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","_onConnMessage","onclose","_onConnClose","clearInterval","getChannels","removeChannel","removeAllChannels","all","kind","msg","connectionState","readyState","connecting","Connecting","Open","closing","Closing","Closed","chan","isThrottled","_throttle","newRef","dupChannel","_appendParams","vsn","rawMessage","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","URLSearchParams","eventsPerSecondLimit","StorageError","__isStorageError","isStorageError","StorageApiError","toJSON","StorageUnknownError","originalError","resolveResponse","Response","_getErrorMessage","error_description","handleError","Res","_getRequestParams","parameters","_handleRequest","fetcher","noResolveJson","post","put","remove","DEFAULT_SEARCH_OPTIONS","sortBy","DEFAULT_FILE_OPTIONS","cacheControl","contentType","StorageFileApi","bucketId","uploadOrUpdate","path","fileBody","fileOptions","cleanPath","_removeEmptyFolders","_path","_getFinalPath","upload","move","fromPath","toPath","sourceKey","destinationKey","copy","Key","createSignedUrl","expiresIn","downloadQueryParam","download","signedUrl","encodeURI","signedURL","createSignedUrls","paths","datum","getPublicUrl","publicUrl","prefixes","list","StorageBucketApi","listBuckets","getBucket","createBucket","public","updateBucket","emptyBucket","deleteBucket","StorageClient","resolveHeadersConstructor","Headers","fetchWithAuth","supabaseKey","getAccessToken","HeadersConstructor","has","stripTrailingSlash","applySettingDefaults","defaults","db","dbOptions","auth","authOptions","realtime","realtimeOptions","global","globalOptions","DEFAULT_DB_OPTIONS","DEFAULT_AUTH_OPTIONS","DEFAULT_REALTIME_OPTIONS","DEFAULT_GLOBAL_OPTIONS","expiresAt","timeNow","round","Date","now","random","getParameterByName","location","href","regex","results","exec","decodeURIComponent","looksLikeFetchResponse","maybeResponse","setItemAsync","storage","setItem","getItemAsync","getItem","removeItemAsync","removeItem","decodeBase64URL","atob","ReferenceError","Buffer","Deferred","promise","promiseConstructor","rej","decodeJWTPayload","parts","base64Url","AuthError","__isAuthError","isAuthError","AuthApiError","AuthUnknownError","CustomAuthError","AuthSessionMissingError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","AuthRetryableFetchError","__rest","t","p","getOwnPropertySymbols","propertyIsEnumerable","NETWORK_ERROR_CODES","_request","jwt","qs","redirectTo","queryString","xform","_sessionResponse","session","hasSession","expires_at","expires_in","user","_userResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","properties","refresh_token","GoTrueAdminApi","mfa","listFactors","_listFactors","deleteFactor","_deleteFactor","signOut","inviteUserByEmail","email","generateLink","new_email","newEmail","createUser","attributes","listUsers","users","getUserById","uid","updateUserById","deleteUser","userId","GOTRUE_URL","STORAGE_KEY","EXPIRY_MARGIN","NETWORK_FAILURE","MAX_RETRIES","RETRY_INTERVAL","localStorageAdapter","globalThis","localStorage","polyfillGlobalThis","defineProperty","configurable","__magic__","DEFAULT_OPTIONS","storageKey","autoRefreshToken","persistSession","detectSessionInUrl","GoTrueClient","stateChangeEmitters","networkRetries","refreshingDeferred","initializePromise","inMemorySession","admin","initialize","verify","_verify","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","_initialize","_isImplicitGrantFlow","_getSessionFromUrl","_removeSession","redirectType","_saveSession","_notifyAllSubscribers","_recoverAndRefresh","_handleVisibilityChange","signUp","credentials","password","emailRedirectTo","gotrue_meta_security","captcha_token","captchaToken","phone","signInWithPassword","signInWithOAuth","_handleProviderSignIn","provider","scopes","queryParams","signInWithOtp","create_user","shouldCreateUser","verifyOtp","getSession","currentSession","maybeSession","_isValidSession","hasExpired","_callRefreshToken","getUser","updateUser","sessionData","sessionError","userError","_decodeJWT","setSession","exp","_refreshAccessToken","token_type","refreshSession","error_code","provider_token","provider_refresh_token","hash","onAuthStateChange","subscription","resetPasswordForEmail","refreshToken","isValidSession","_getUrlForProvider","Infinity","refreshTokenTimer","pow","refreshDurationBeforeExpires","_startAutoRefreshToken","_persistSession","unref","addEventListener","document","visibilityState","urlParams","encodeURIComponent","factorId","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","challenge_id","challengeId","challengeData","challengeError","factors","factor","currentLevel","nextLevel","currentAuthenticationMethods","aal","verifiedFactors","amr","SupabaseAuthClient","SupabaseClient","supabaseUrl","_g","_h","_supabaseUrl","realtimeUrl","authUrl","storageUrl","isPlatform","urlParts","functionsUrl","defaultStorageKey","hostname","DEFAULTS","_initSupabaseAuthClient","_getAccessToken","_initRealtimeClient","_listenForAuthEvents","functions","authHeaders","apikey","_handleTokenChanged","source","changedAccessToken","createClient","supabaseAnonKey","supabase","currentRouteName","$route","userName","loading","sendMessage","async","alert","component","verifyUser","router","components","MessageCard","__self__","F","DOMException","exports","support","iterable","Symbol","arrayBuffer","isDataView","isPrototypeOf","viewClasses","isArrayBufferView","isView","normalizeName","TypeError","normalizeValue","iteratorFor","items","iterator","shift","header","consumed","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","Uint8Array","chars","fromCharCode","bufferClone","Body","_initBody","_bodyInit","_bodyText","_bodyBlob","_bodyFormData","_bodyArrayBuffer","oldValue","normalizeMethod","upcased","toUpperCase","Request","referrer","form","bytes","parseHeaders","rawHeaders","preProcessedHeaders","line","bodyInit","clone","redirectStatuses","redirect","RangeError","stack","create","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","withCredentials","setRequestHeader","onreadystatechange","removeEventListener","polyfill","ponyfill","ctx","module","naiveFallback","__global__","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","native_instance"],"sourceRoot":""}